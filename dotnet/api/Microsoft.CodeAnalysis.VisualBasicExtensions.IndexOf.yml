### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
    description: Returns non-negative index if the list contains a token which matches <code data-dev-comment-type="paramref">kind</code>, -1 otherwise.
  parameters:
  - namesWithMoniker:
    - value: list
    description: Token list.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind"></xref> to find.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  name: IndexOf(SyntaxTokenList, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(SyntaxTokenList, SyntaxKind)
  nameWithType: VisualBasicExtensions.IndexOf(SyntaxTokenList, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static int IndexOf(Microsoft::CodeAnalysis::SyntaxTokenList list, Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static int IndexOf (this Microsoft.CodeAnalysis.SyntaxTokenList list, Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member IndexOf : Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -> int'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IndexOf (list As SyntaxTokenList, kind As SyntaxKind) As Integer
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Returns the index of the first token of a specified kind in the token list.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
    description: Returns non-negative index if the list contains a trivia which matches <code data-dev-comment-type="paramref">kind</code>, -1 otherwise.
  parameters:
  - namesWithMoniker:
    - value: list
    description: Trivia list.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTriviaList?alt=Microsoft.CodeAnalysis.SyntaxTriviaList&text=SyntaxTriviaList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind"></xref> to find.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  name: IndexOf(SyntaxTriviaList, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(SyntaxTriviaList, SyntaxKind)
  nameWithType: VisualBasicExtensions.IndexOf(SyntaxTriviaList, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static int IndexOf(Microsoft::CodeAnalysis::SyntaxTriviaList list, Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static int IndexOf (this Microsoft.CodeAnalysis.SyntaxTriviaList list, Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member IndexOf : Microsoft.CodeAnalysis.SyntaxTriviaList * Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -> int'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IndexOf (list As SyntaxTriviaList, kind As SyntaxKind) As Integer
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Returns the index of the first trivia of a specified kind in the trivia list.
  metadata: {}
- typeParameters:
  - name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
    description: Returns non-negative index if the list contains a node which matches <code data-dev-comment-type="paramref">kind</code>, -1 otherwise.
  parameters:
  - namesWithMoniker:
    - value: list
    description: Node list.
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind"></xref> to find.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  name: IndexOf<TNode>(SeparatedSyntaxList<TNode>, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf<TNode>(SeparatedSyntaxList<TNode>, SyntaxKind)
  nameWithType: VisualBasicExtensions.IndexOf<TNode>(SeparatedSyntaxList<TNode>, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode[System::Runtime::CompilerServices::Extension]
         static int IndexOf(Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> list, Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);
  - lang: csharp
    values:
    - value: 'public static int IndexOf<TNode> (this Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> list, Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member IndexOf : Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> * Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -> int (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IndexOf(Of TNode As SyntaxNode) (list As SeparatedSyntaxList(Of TNode), kind As SyntaxKind) As Integer
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Returns the index of the first node of a specified kind in the node list.
  metadata: {}
- typeParameters:
  - name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
    description: Returns non-negative index if the list contains a node which matches <code data-dev-comment-type="paramref">kind</code>, -1 otherwise.
  parameters:
  - namesWithMoniker:
    - value: list
    description: Node list.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList`1&text=SyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind"></xref> to find.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)
  name: IndexOf<TNode>(SyntaxList<TNode>, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf<TNode>(SyntaxList<TNode>, SyntaxKind)
  nameWithType: VisualBasicExtensions.IndexOf<TNode>(SyntaxList<TNode>, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode[System::Runtime::CompilerServices::Extension]
         static int IndexOf(Microsoft::CodeAnalysis::SyntaxList<TNode> list, Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);
  - lang: csharp
    values:
    - value: 'public static int IndexOf<TNode> (this Microsoft.CodeAnalysis.SyntaxList<TNode> list, Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member IndexOf : Microsoft.CodeAnalysis.SyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> * Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -> int (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IndexOf(Of TNode As SyntaxNode) (list As SyntaxList(Of TNode), kind As SyntaxKind) As Integer
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Returns the index of the first node of a specified kind in the node list.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf
namespace: Microsoft.CodeAnalysis
name: IndexOf
fullName: Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf
nameWithType: VisualBasicExtensions.IndexOf
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf
  - Microsoft::CodeAnalysis::VisualBasicExtensions::IndexOf
  - IndexOf
  - VisualBasicExtensions.IndexOf
  - VisualBasicExtensions::IndexOf
  - Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1
  - Microsoft::CodeAnalysis::VisualBasicExtensions::IndexOf``1
  - IndexOf``1
  - VisualBasicExtensions.IndexOf``1
  - VisualBasicExtensions::IndexOf``1
  helpviewer_keywords:
  - VisualBasicExtensions.IndexOf method [.NET]
  - IndexOf method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.IndexOf(SyntaxTokenList, SyntaxKind) extension method [.NET]
  - IndexOf(SyntaxTokenList, SyntaxKind) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.IndexOf(SyntaxTriviaList, SyntaxKind) extension method [.NET]
  - IndexOf(SyntaxTriviaList, SyntaxKind) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.IndexOf<TNode>(SeparatedSyntaxList<TNode>, SyntaxKind) extension method [.NET]
  - IndexOf<TNode>(SeparatedSyntaxList<TNode>, SyntaxKind) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.IndexOf<TNode>(SyntaxList<TNode>, SyntaxKind) extension method [.NET]
  - IndexOf<TNode>(SyntaxList<TNode>, SyntaxKind) extension method [.NET], class VisualBasicExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
