### YamlMime:NetMember
type: method
members:
- typeParameters:
  - description: The type of the value associated with the key.
    name: TValue
  returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: Returns true on success, false otherwise.
  parameters:
  - namesWithMoniker:
    - value: tree
    description: <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxTree"></xref> for which the value is queried.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTree?alt=Microsoft.CodeAnalysis.SyntaxTree&text=SyntaxTree" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: valueProvider
    description: Provider that computes the underlying value.
    type: <xref href="Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1?alt=Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1&text=SyntaxTreeValueProvider%3CTValue%3E" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: value
    description: Value associated with the key.
    type: TValue
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider{``0},``0@)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider{``0},``0@)
  name: TryGetValue<TValue>(SyntaxTree, SyntaxTreeValueProvider<TValue>, TValue)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue<TValue>(SyntaxTree, SyntaxTreeValueProvider<TValue>, TValue)
  nameWithType: CompilationAnalysisContext.TryGetValue<TValue>(SyntaxTree, SyntaxTreeValueProvider<TValue>, TValue)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TValue>
         bool TryGetValue(Microsoft::CodeAnalysis::SyntaxTree ^ tree, Microsoft::CodeAnalysis::Diagnostics::SyntaxTreeValueProvider<TValue> ^ valueProvider, [Runtime::InteropServices::Out] TValue % value);
  - lang: csharp
    values:
    - value: public bool TryGetValue<TValue> (Microsoft.CodeAnalysis.SyntaxTree tree, Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<TValue> valueProvider, out TValue value);
  - lang: fsharp
    values:
    - value: "member this.TryGetValue : Microsoft.CodeAnalysis.SyntaxTree * Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider<'Value> * 'Value -> bool"
  - lang: vb
    values:
    - value: Public Function TryGetValue(Of TValue) (tree As SyntaxTree, valueProvider As SyntaxTreeValueProvider(Of TValue), ByRef value As TValue) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Attempts to compute or get the cached value provided by the given <code data-dev-comment-type="paramref">valueProvider</code> for the given <code data-dev-comment-type="paramref">tree</code>.

    Note that the pair {<code data-dev-comment-type="paramref">valueProvider</code>, <code data-dev-comment-type="paramref">tree</code>} acts as the key.

    Reusing the same <code data-dev-comment-type="paramref">valueProvider</code> instance across analyzer actions and/or analyzer instances can improve the overall analyzer performance by avoiding recomputation of the values.
  metadata: {}
- typeParameters:
  - description: The type of the value associated with the key.
    name: TValue
  returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: Returns true on success, false otherwise.
  parameters:
  - namesWithMoniker:
    - value: text
    description: <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Text.SourceText"></xref> for which the value is queried.
    type: <xref href="Microsoft.CodeAnalysis.Text.SourceText?alt=Microsoft.CodeAnalysis.Text.SourceText&text=SourceText" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: valueProvider
    description: Provider that computes the underlying value.
    type: <xref href="Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider`1?alt=Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider`1&text=SourceTextValueProvider%3CTValue%3E" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: value
    description: Value associated with the key.
    type: TValue
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider{``0},``0@)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider{``0},``0@)
  name: TryGetValue<TValue>(SourceText, SourceTextValueProvider<TValue>, TValue)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue<TValue>(SourceText, SourceTextValueProvider<TValue>, TValue)
  nameWithType: CompilationAnalysisContext.TryGetValue<TValue>(SourceText, SourceTextValueProvider<TValue>, TValue)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TValue>
         bool TryGetValue(Microsoft::CodeAnalysis::Text::SourceText ^ text, Microsoft::CodeAnalysis::Diagnostics::SourceTextValueProvider<TValue> ^ valueProvider, [Runtime::InteropServices::Out] TValue % value);
  - lang: csharp
    values:
    - value: public bool TryGetValue<TValue> (Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider<TValue> valueProvider, out TValue value);
  - lang: fsharp
    values:
    - value: "member this.TryGetValue : Microsoft.CodeAnalysis.Text.SourceText * Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider<'Value> * 'Value -> bool"
  - lang: vb
    values:
    - value: Public Function TryGetValue(Of TValue) (text As SourceText, valueProvider As SourceTextValueProvider(Of TValue), ByRef value As TValue) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Attempts to compute or get the cached value provided by the given <code data-dev-comment-type="paramref">valueProvider</code> for the given <code data-dev-comment-type="paramref">text</code>.

    Note that the pair {<code data-dev-comment-type="paramref">valueProvider</code>, <code data-dev-comment-type="paramref">text</code>} acts as the key.

    Reusing the same <code data-dev-comment-type="paramref">valueProvider</code> instance across analyzer actions and/or analyzer instances can improve the overall analyzer performance by avoiding recomputation of the values.
  metadata: {}
uid: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue*
commentId: Overload:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue
namespace: Microsoft.CodeAnalysis.Diagnostics
name: TryGetValue
fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue
nameWithType: CompilationAnalysisContext.TryGetValue
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.Common v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.Common v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.Common v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.Common v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.Common v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.Common v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue
  - Microsoft::CodeAnalysis::Diagnostics::CompilationAnalysisContext::TryGetValue
  - TryGetValue
  - CompilationAnalysisContext.TryGetValue
  - CompilationAnalysisContext::TryGetValue
  - Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1
  - Microsoft::CodeAnalysis::Diagnostics::CompilationAnalysisContext::TryGetValue``1
  - TryGetValue``1
  - CompilationAnalysisContext.TryGetValue``1
  - CompilationAnalysisContext::TryGetValue``1
  helpviewer_keywords:
  - CompilationAnalysisContext.TryGetValue method [.NET]
  - TryGetValue method [.NET], struct CompilationAnalysisContext
  - CompilationAnalysisContext.TryGetValue<TValue>(SyntaxTree, SyntaxTreeValueProvider<TValue>, TValue) method [.NET]
  - TryGetValue<TValue>(SyntaxTree, SyntaxTreeValueProvider<TValue>, TValue) method [.NET], struct CompilationAnalysisContext
  - CompilationAnalysisContext.TryGetValue<TValue>(SourceText, SourceTextValueProvider<TValue>, TValue) method [.NET]
  - TryGetValue<TValue>(SourceText, SourceTextValueProvider<TValue>, TValue) method [.NET], struct CompilationAnalysisContext
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
