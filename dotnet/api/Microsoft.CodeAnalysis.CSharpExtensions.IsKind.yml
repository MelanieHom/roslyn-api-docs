### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: <code data-dev-comment-type="langword">true</code> if the node is of the specified kind; otherwise, <code data-dev-comment-type="langword">false</code>.
  parameters:
  - namesWithMoniker:
    - value: node
    description: The source node.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The syntax kind to test for.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  name: IsKind(SyntaxNode, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(SyntaxNode, SyntaxKind)
  nameWithType: CSharpExtensions.IsKind(SyntaxNode, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool IsKind(Microsoft::CodeAnalysis::SyntaxNode ^ node, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static bool IsKind (this Microsoft.CodeAnalysis.SyntaxNode node, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static bool IsKind (this Microsoft.CodeAnalysis.SyntaxNode? node, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member IsKind : Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.CSharp.SyntaxKind -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IsKind (node As SyntaxNode, kind As SyntaxKind) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Determines if <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxNode"></xref> is of a specified kind.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: <code data-dev-comment-type="langword">true</code> if the node or token is of the specified kind; otherwise, <code data-dev-comment-type="langword">false</code>.
  parameters:
  - namesWithMoniker:
    - value: nodeOrToken
    description: The source node or token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNodeOrToken?alt=Microsoft.CodeAnalysis.SyntaxNodeOrToken&text=SyntaxNodeOrToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The syntax kind to test for.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  name: IsKind(SyntaxNodeOrToken, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(SyntaxNodeOrToken, SyntaxKind)
  nameWithType: CSharpExtensions.IsKind(SyntaxNodeOrToken, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool IsKind(Microsoft::CodeAnalysis::SyntaxNodeOrToken nodeOrToken, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static bool IsKind (this Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member IsKind : Microsoft.CodeAnalysis.SyntaxNodeOrToken * Microsoft.CodeAnalysis.CSharp.SyntaxKind -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IsKind (nodeOrToken As SyntaxNodeOrToken, kind As SyntaxKind) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Determines if <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxNodeOrToken"></xref> is of a specified kind.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: <code data-dev-comment-type="langword">true</code> if the token is of the specified kind; otherwise, <code data-dev-comment-type="langword">false</code>.
  parameters:
  - namesWithMoniker:
    - value: token
    description: The source token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The syntax kind to test for.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  name: IsKind(SyntaxToken, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(SyntaxToken, SyntaxKind)
  nameWithType: CSharpExtensions.IsKind(SyntaxToken, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool IsKind(Microsoft::CodeAnalysis::SyntaxToken token, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static bool IsKind (this Microsoft.CodeAnalysis.SyntaxToken token, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member IsKind : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.SyntaxKind -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IsKind (token As SyntaxToken, kind As SyntaxKind) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Determines if <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxToken"></xref> is of a specified kind.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: <code data-dev-comment-type="langword">true</code> if the trivia is of the specified kind; otherwise, <code data-dev-comment-type="langword">false</code>.
  parameters:
  - namesWithMoniker:
    - value: trivia
    description: The source trivia.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTrivia?alt=Microsoft.CodeAnalysis.SyntaxTrivia&text=SyntaxTrivia" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: The syntax kind to test for.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  name: IsKind(SyntaxTrivia, SyntaxKind)
  fullName: Microsoft.CodeAnalysis.CSharpExtensions.IsKind(SyntaxTrivia, SyntaxKind)
  nameWithType: CSharpExtensions.IsKind(SyntaxTrivia, SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool IsKind(Microsoft::CodeAnalysis::SyntaxTrivia trivia, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static bool IsKind (this Microsoft.CodeAnalysis.SyntaxTrivia trivia, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member IsKind : Microsoft.CodeAnalysis.SyntaxTrivia * Microsoft.CodeAnalysis.CSharp.SyntaxKind -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function IsKind (trivia As SyntaxTrivia, kind As SyntaxKind) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Determines if <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxTrivia"></xref> is of a specified kind.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharpExtensions.IsKind*
commentId: Overload:Microsoft.CodeAnalysis.CSharpExtensions.IsKind
namespace: Microsoft.CodeAnalysis
name: IsKind
fullName: Microsoft.CodeAnalysis.CSharpExtensions.IsKind
nameWithType: CSharpExtensions.IsKind
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharpExtensions.IsKind
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharpExtensions.IsKind
  - Microsoft::CodeAnalysis::CSharpExtensions::IsKind
  - IsKind
  - CSharpExtensions.IsKind
  - CSharpExtensions::IsKind
  helpviewer_keywords:
  - CSharpExtensions.IsKind method [.NET]
  - IsKind method [.NET], class CSharpExtensions
  - CSharpExtensions.IsKind(SyntaxNode, SyntaxKind) extension method [.NET]
  - IsKind(SyntaxNode, SyntaxKind) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.IsKind(SyntaxNodeOrToken, SyntaxKind) extension method [.NET]
  - IsKind(SyntaxNodeOrToken, SyntaxKind) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.IsKind(SyntaxToken, SyntaxKind) extension method [.NET]
  - IsKind(SyntaxToken, SyntaxKind) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.IsKind(SyntaxTrivia, SyntaxKind) extension method [.NET]
  - IsKind(SyntaxTrivia, SyntaxKind) extension method [.NET], class CSharpExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
