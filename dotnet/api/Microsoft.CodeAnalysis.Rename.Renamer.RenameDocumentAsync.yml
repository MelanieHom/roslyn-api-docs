### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet?alt=Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet&text=RenameDocumentActionSet" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: document
    description: The document to be modified
    type: <xref href="Microsoft.CodeAnalysis.Document?alt=Microsoft.CodeAnalysis.Document&text=Document" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: options
    description: Options used to configure rename of a type contained in the document that matches the document's name.
    type: <xref href="Microsoft.CodeAnalysis.Rename.DocumentRenameOptions?alt=Microsoft.CodeAnalysis.Rename.DocumentRenameOptions&text=DocumentRenameOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: newDocumentName
    description: The new name for the document. Pass null or the same name to keep unchanged.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: newDocumentFolders
    description: The new set of folders for the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.TextDocument.Folders"></xref> property
    type: <xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Rename.DocumentRenameOptions,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Rename.DocumentRenameOptions,System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  name: RenameDocumentAsync(Document, DocumentRenameOptions, String, IReadOnlyList<String>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Document, DocumentRenameOptions, String, IReadOnlyList<String>, CancellationToken)
  nameWithType: Renamer.RenameDocumentAsync(Document, DocumentRenameOptions, String, IReadOnlyList<String>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet> RenameDocumentAsync (Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Rename.DocumentRenameOptions options, string? newDocumentName, System.Collections.Generic.IReadOnlyList<string>? newDocumentFolders = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member RenameDocumentAsync : Microsoft.CodeAnalysis.Document * Microsoft.CodeAnalysis.Rename.DocumentRenameOptions * string * System.Collections.Generic.IReadOnlyList<string> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet>'
  - lang: vb
    values:
    - value: Public Shared Function RenameDocumentAsync (document As Document, options As DocumentRenameOptions, newDocumentName As String, Optional newDocumentFolders As IReadOnlyList(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Renamer.RenameDocumentActionSet)
  monikers:
  - roslyn-dotnet-4.2.0
  summary: >-
    Call to perform a rename of document or change in document folders. Returns additional code changes related to the document

    being modified, such as renaming symbols in the file. 


    Each change is added as a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAction"></xref> in the returned <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet.ApplicableActions"></xref>.


    Each action may individually encounter errors that prevent it from behaving correctly. Those are reported in <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAction.GetErrors(System.Globalization.CultureInfo)"></xref>.


    <p></p>


    Current supported actions that may be returned:
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet?alt=Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet&text=RenameDocumentActionSet" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: document
    description: The document to be modified
    type: <xref href="Microsoft.CodeAnalysis.Document?alt=Microsoft.CodeAnalysis.Document&text=Document" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: newDocumentName
    description: The new name for the document. Pass null or the same name to keep unchanged.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: newDocumentFolders
    description: The new set of folders for the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.TextDocument.Folders"></xref> property
    type: <xref href="System.Collections.Generic.IReadOnlyList`1?alt=System.Collections.Generic.IReadOnlyList&text=IReadOnlyList" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: optionSet
    type: <xref href="Microsoft.CodeAnalysis.Options.OptionSet?alt=Microsoft.CodeAnalysis.Options.OptionSet&text=OptionSet" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Microsoft.CodeAnalysis.Document,System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Microsoft.CodeAnalysis.Document,System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  name: RenameDocumentAsync(Document, String, IReadOnlyList<String>, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync(Document, String, IReadOnlyList<String>, OptionSet, CancellationToken)
  nameWithType: Renamer.RenameDocumentAsync(Document, String, IReadOnlyList<String>, OptionSet, CancellationToken)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
    monikers:
    - roslyn-dotnet-4.2.0
  attributeMonikers:
  - roslyn-dotnet-4.2.0
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet> RenameDocumentAsync (Microsoft.CodeAnalysis.Document document, string newDocumentName, System.Collections.Generic.IReadOnlyList<string>? newDocumentFolders = default, Microsoft.CodeAnalysis.Options.OptionSet? optionSet = default, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
    - value: >-
        [System.Obsolete("Use overload taking RenameOptions")]

        public static System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet> RenameDocumentAsync (Microsoft.CodeAnalysis.Document document, string? newDocumentName, System.Collections.Generic.IReadOnlyList<string>? newDocumentFolders = default, Microsoft.CodeAnalysis.Options.OptionSet? optionSet = default, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member RenameDocumentAsync : Microsoft.CodeAnalysis.Document * string * System.Collections.Generic.IReadOnlyList<string> * Microsoft.CodeAnalysis.Options.OptionSet * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet>'
      monikers:
      - roslyn-dotnet
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
    - value: >-
        [<System.Obsolete("Use overload taking RenameOptions")>]

        static member RenameDocumentAsync : Microsoft.CodeAnalysis.Document * string * System.Collections.Generic.IReadOnlyList<string> * Microsoft.CodeAnalysis.Options.OptionSet * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet>
      monikers:
      - roslyn-dotnet-4.2.0
  - lang: vb
    values:
    - value: Public Shared Function RenameDocumentAsync (document As Document, newDocumentName As String, Optional newDocumentFolders As IReadOnlyList(Of String) = Nothing, Optional optionSet As OptionSet = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Renamer.RenameDocumentActionSet)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  obsoleteMessagesWithMoniker:
  - value: Use overload taking RenameOptions
    monikers:
    - roslyn-dotnet-4.2.0
  summary: >-
    Call to perform a rename of document or change in document folders. Returns additional code changes related to the document

    being modified, such as renaming symbols in the file. 


    Each change is added as a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAction"></xref> in the returned <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentActionSet.ApplicableActions"></xref>.


    Each action may individually encounter errors that prevent it from behaving correctly. Those are reported in <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAction.GetErrors(System.Globalization.CultureInfo)"></xref>.


    <p></p>


    Current supported actions that may be returned:
  metadata: {}
uid: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync*
commentId: Overload:Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync
namespace: Microsoft.CodeAnalysis.Rename
name: RenameDocumentAsync
fullName: Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync
nameWithType: Renamer.RenameDocumentAsync
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.2.0
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync
  api_location:
  - Microsoft.CodeAnalysis.Workspaces.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Rename.Renamer.RenameDocumentAsync
  - Microsoft::CodeAnalysis::Rename::Renamer::RenameDocumentAsync
  - RenameDocumentAsync
  - Renamer.RenameDocumentAsync
  - Renamer::RenameDocumentAsync
  helpviewer_keywords:
  - Renamer.RenameDocumentAsync method [.NET]
  - RenameDocumentAsync method [.NET], class Renamer
  - Renamer.RenameDocumentAsync(Document, DocumentRenameOptions, String, IReadOnlyList<String>, CancellationToken) method [.NET]
  - RenameDocumentAsync(Document, DocumentRenameOptions, String, IReadOnlyList<String>, CancellationToken) method [.NET], class Renamer
  - Renamer.RenameDocumentAsync(Document, String, IReadOnlyList<String>, OptionSet, CancellationToken) method [.NET]
  - RenameDocumentAsync(Document, String, IReadOnlyList<String>, OptionSet, CancellationToken) method [.NET], class Renamer
  monikers:
  - roslyn-dotnet-4.2.0
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
