### YamlMime:NetMember
type: operator
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: nodes
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>&gt;
  type: operator
  uid: Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode})~Microsoft.CodeAnalysis.SeparatedSyntaxList{`0}
  commentId: M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode})~Microsoft.CodeAnalysis.SeparatedSyntaxList{`0}
  name: Implicit(SeparatedSyntaxList<SyntaxNode> to SeparatedSyntaxList<TNode>)
  fullName: Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<SyntaxNode> to SeparatedSyntaxList<TNode>)
  nameWithType: SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<SyntaxNode> to SeparatedSyntaxList<TNode>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static operator Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode>(Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::SyntaxNode ^> nodes);
  - lang: csharp
    values:
    - value: public static implicit operator Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> (Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.SyntaxNode> nodes);
  - lang: fsharp
    values:
    - value: "static member op_Implicit : Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.SyntaxNode> -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)>"
  - lang: vb
    values:
    - value: Public Shared Widening Operator CType (nodes As SeparatedSyntaxList(Of SyntaxNode)) As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: nodes
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  type: operator
  uid: Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})~Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode}
  commentId: M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})~Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode}
  name: Implicit(SeparatedSyntaxList<TNode> to SeparatedSyntaxList<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<TNode> to SeparatedSyntaxList<SyntaxNode>)
  nameWithType: SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<TNode> to SeparatedSyntaxList<SyntaxNode>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static operator Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::SyntaxNode ^>(Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> nodes);
  - lang: csharp
    values:
    - value: public static implicit operator Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.SyntaxNode> (Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> nodes);
  - lang: fsharp
    values:
    - value: "static member op_Implicit : Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> -> Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.SyntaxNode>"
  - lang: vb
    values:
    - value: Public Shared Widening Operator CType (nodes As SeparatedSyntaxList(Of TNode)) As SeparatedSyntaxList(Of SyntaxNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
uid: Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit*
commentId: Overload:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit
namespace: Microsoft.CodeAnalysis
name: Implicit
fullName: Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Implicit
nameWithType: SeparatedSyntaxList<TNode>.Implicit
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.Common v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.Common v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.Common v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.Common v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.Common v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.Common v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Implicit
  - Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit
  - Microsoft::CodeAnalysis::SeparatedSyntaxList`1::op_Implicit
  - Microsoft.CodeAnalysis.SeparatedSyntaxList.op_Implicit
  - op_Implicit
  - SeparatedSyntaxList`1.op_Implicit
  - SeparatedSyntaxList`1::op_Implicit
  helpviewer_keywords:
  - SeparatedSyntaxList<TNode>.Implicit operator [.NET]
  - Implicit operator [.NET], struct SeparatedSyntaxList<TNode>
  - SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<SyntaxNode> to SeparatedSyntaxList<TNode>) operator [.NET]
  - Implicit(SeparatedSyntaxList<SyntaxNode> to SeparatedSyntaxList<TNode>) operator [.NET], struct SeparatedSyntaxList<TNode>
  - SeparatedSyntaxList<TNode>.Implicit(SeparatedSyntaxList<TNode> to SeparatedSyntaxList<SyntaxNode>) operator [.NET]
  - Implicit(SeparatedSyntaxList<TNode> to SeparatedSyntaxList<SyntaxNode>) operator [.NET], struct SeparatedSyntaxList<TNode>
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
