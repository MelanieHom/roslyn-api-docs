### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax&text=TryStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: catches
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax&text=CatchClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax})
  name: TryStatement(SyntaxList<CatchClauseSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(SyntaxList<CatchClauseSyntax>)
  nameWithType: SyntaxFactory.TryStatement(SyntaxList<CatchClauseSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches = default);
  - lang: fsharp
    values:
    - value: 'static member TryStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function TryStatement (Optional catches As SyntaxList(Of CatchClauseSyntax) = Nothing) As TryStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new TryStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax&text=TryStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: catches
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax&text=CatchClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: finally
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax&text=FinallyClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  name: TryStatement(BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  nameWithType: SyntaxFactory.TryStatement(BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::TryStatementSyntax ^ TryStatement(Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^> catches, Microsoft::CodeAnalysis::CSharp::Syntax::FinallyClauseSyntax ^ finally);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax finally);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax? finally);
      monikers:
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member TryStatement : Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function TryStatement (block As BlockSyntax, catches As SyntaxList(Of CatchClauseSyntax), finally As FinallyClauseSyntax) As TryStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new TryStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax&text=TryStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: catches
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax&text=CatchClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: finally
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax&text=FinallyClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  name: TryStatement(SyntaxList<AttributeListSyntax>, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  nameWithType: SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax? finally);
  - lang: fsharp
    values:
    - value: 'static member TryStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function TryStatement (attributeLists As SyntaxList(Of AttributeListSyntax), block As BlockSyntax, catches As SyntaxList(Of CatchClauseSyntax), finally As FinallyClauseSyntax) As TryStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new TryStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax&text=TryStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: tryKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: catches
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax&text=CatchClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: finally
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax&text=FinallyClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  name: TryStatement(SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  nameWithType: SyntaxFactory.TryStatement(SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::TryStatementSyntax ^ TryStatement(Microsoft::CodeAnalysis::SyntaxToken tryKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^> catches, Microsoft::CodeAnalysis::CSharp::Syntax::FinallyClauseSyntax ^ finally);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.SyntaxToken tryKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax finally);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.SyntaxToken tryKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax? finally);
      monikers:
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member TryStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function TryStatement (tryKeyword As SyntaxToken, block As BlockSyntax, catches As SyntaxList(Of CatchClauseSyntax), finally As FinallyClauseSyntax) As TryStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new TryStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax&text=TryStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: tryKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: catches
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax&text=CatchClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: finally
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax&text=FinallyClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  name: TryStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  nameWithType: SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax TryStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxToken tryKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> catches, Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax? finally);
  - lang: fsharp
    values:
    - value: 'static member TryStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function TryStatement (attributeLists As SyntaxList(Of AttributeListSyntax), tryKeyword As SyntaxToken, block As BlockSyntax, catches As SyntaxList(Of CatchClauseSyntax), finally As FinallyClauseSyntax) As TryStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new TryStatementSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement
namespace: Microsoft.CodeAnalysis.CSharp
name: TryStatement
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement
nameWithType: SyntaxFactory.TryStatement
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
- cpp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::TryStatement
  - TryStatement
  - SyntaxFactory.TryStatement
  - SyntaxFactory::TryStatement
  helpviewer_keywords:
  - SyntaxFactory.TryStatement method [.NET]
  - TryStatement method [.NET], class SyntaxFactory
  - SyntaxFactory.TryStatement(SyntaxList<CatchClauseSyntax>) method [.NET]
  - TryStatement(SyntaxList<CatchClauseSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.TryStatement(BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET]
  - TryStatement(BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET]
  - TryStatement(SyntaxList<AttributeListSyntax>, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.TryStatement(SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET]
  - TryStatement(SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.TryStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET]
  - TryStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, BlockSyntax, SyntaxList<CatchClauseSyntax>, FinallyClauseSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
