### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol?alt=Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol&text=IFunctionPointerTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: returnType
    type: <xref href="Microsoft.CodeAnalysis.ITypeSymbol?alt=Microsoft.CodeAnalysis.ITypeSymbol&text=ITypeSymbol" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: returnRefKind
    type: <xref href="Microsoft.CodeAnalysis.RefKind?alt=Microsoft.CodeAnalysis.RefKind&text=RefKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterTypes
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.ITypeSymbol?alt=Microsoft.CodeAnalysis.ITypeSymbol&text=ITypeSymbol" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: parameterRefKinds
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.RefKind?alt=Microsoft.CodeAnalysis.RefKind&text=RefKind" data-throw-if-not-resolved="True"/>&gt;
  exceptions:
  - description: If the compilation is a VisualBasic compilation.
    type: <xref href="System.NotSupportedException" data-throw-if-not-resolved="True"/>
  - description: >-
      If:
       * <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.RefKind.Out"></xref> is passed as the returnRefKind.
       * parameterTypes and parameterRefKinds do not have the same length.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: >-
      If returnType is <code data-dev-comment-type="langword">null</code>, or if parameterTypes or parameterRefKinds are default,

      or if any of the types in parameterTypes are null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.RefKind,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RefKind})
  commentId: M:Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.RefKind,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RefKind})
  name: CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>)
  fullName: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>)
  nameWithType: Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol CreateFunctionPointerTypeSymbol (Microsoft.CodeAnalysis.ITypeSymbol returnType, Microsoft.CodeAnalysis.RefKind returnRefKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol> parameterTypes, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind> parameterRefKinds);
  - lang: fsharp
    values:
    - value: 'member this.CreateFunctionPointerTypeSymbol : Microsoft.CodeAnalysis.ITypeSymbol * Microsoft.CodeAnalysis.RefKind * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol> * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind> -> Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol'
  - lang: vb
    values:
    - value: Public Function CreateFunctionPointerTypeSymbol (returnType As ITypeSymbol, returnRefKind As RefKind, parameterTypes As ImmutableArray(Of ITypeSymbol), parameterRefKinds As ImmutableArray(Of RefKind)) As IFunctionPointerTypeSymbol
  monikers:
  - roslyn-dotnet-3.7.0
  summary: >-
    Returns a new IFunctionPointerTypeSymbol representing a function pointer type tied to types in this

    Compilation.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol?alt=Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol&text=IFunctionPointerTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: returnType
    type: <xref href="Microsoft.CodeAnalysis.ITypeSymbol?alt=Microsoft.CodeAnalysis.ITypeSymbol&text=ITypeSymbol" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: returnRefKind
    type: <xref href="Microsoft.CodeAnalysis.RefKind?alt=Microsoft.CodeAnalysis.RefKind&text=RefKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterTypes
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.ITypeSymbol?alt=Microsoft.CodeAnalysis.ITypeSymbol&text=ITypeSymbol" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: parameterRefKinds
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.RefKind?alt=Microsoft.CodeAnalysis.RefKind&text=RefKind" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: callingConvention
    type: <xref href="System.Reflection.Metadata.SignatureCallingConvention?alt=System.Reflection.Metadata.SignatureCallingConvention&text=SignatureCallingConvention" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: callingConventionTypes
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>&gt;
  exceptions:
  - description: If the compilation is a VisualBasic compilation.
    type: <xref href="System.NotSupportedException" data-throw-if-not-resolved="True"/>
  - description: >-
      If:
       * <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.RefKind.Out"></xref> is passed as the returnRefKind.
       * parameterTypes and parameterRefKinds do not have the same length.
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: >-
      If returnType is <code data-dev-comment-type="langword">null</code>, or if parameterTypes or parameterRefKinds are default,

      or if any of the types in parameterTypes are null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.RefKind,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RefKind},System.Reflection.Metadata.SignatureCallingConvention,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.INamedTypeSymbol})
  commentId: M:Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.RefKind,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RefKind},System.Reflection.Metadata.SignatureCallingConvention,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.INamedTypeSymbol})
  name: CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>, SignatureCallingConvention, ImmutableArray<INamedTypeSymbol>)
  fullName: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>, SignatureCallingConvention, ImmutableArray<INamedTypeSymbol>)
  nameWithType: Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>, SignatureCallingConvention, ImmutableArray<INamedTypeSymbol>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol CreateFunctionPointerTypeSymbol (Microsoft.CodeAnalysis.ITypeSymbol returnType, Microsoft.CodeAnalysis.RefKind returnRefKind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol> parameterTypes, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind> parameterRefKinds, System.Reflection.Metadata.SignatureCallingConvention callingConvention = System.Reflection.Metadata.SignatureCallingConvention.Default, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.INamedTypeSymbol> callingConventionTypes = default);
  - lang: fsharp
    values:
    - value: 'member this.CreateFunctionPointerTypeSymbol : Microsoft.CodeAnalysis.ITypeSymbol * Microsoft.CodeAnalysis.RefKind * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol> * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RefKind> * System.Reflection.Metadata.SignatureCallingConvention * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.INamedTypeSymbol> -> Microsoft.CodeAnalysis.IFunctionPointerTypeSymbol'
  - lang: vb
    values:
    - value: Public Function CreateFunctionPointerTypeSymbol (returnType As ITypeSymbol, returnRefKind As RefKind, parameterTypes As ImmutableArray(Of ITypeSymbol), parameterRefKinds As ImmutableArray(Of RefKind), Optional callingConvention As SignatureCallingConvention = System.Reflection.Metadata.SignatureCallingConvention.Default, Optional callingConventionTypes As ImmutableArray(Of INamedTypeSymbol) = Nothing) As IFunctionPointerTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns a new IFunctionPointerTypeSymbol representing a function pointer type tied to types in this

    Compilation.
  metadata: {}
uid: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol*
commentId: Overload:Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol
namespace: Microsoft.CodeAnalysis
name: CreateFunctionPointerTypeSymbol
fullName: Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol
nameWithType: Compilation.CreateFunctionPointerTypeSymbol
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-3.7.0
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Compilation.CreateFunctionPointerTypeSymbol
  - Microsoft::CodeAnalysis::Compilation::CreateFunctionPointerTypeSymbol
  - CreateFunctionPointerTypeSymbol
  - Compilation.CreateFunctionPointerTypeSymbol
  - Compilation::CreateFunctionPointerTypeSymbol
  helpviewer_keywords:
  - Compilation.CreateFunctionPointerTypeSymbol method [.NET]
  - CreateFunctionPointerTypeSymbol method [.NET], class Compilation
  - Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>) method [.NET]
  - CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>) method [.NET], class Compilation
  - Compilation.CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>, SignatureCallingConvention, ImmutableArray<INamedTypeSymbol>) method [.NET]
  - CreateFunctionPointerTypeSymbol(ITypeSymbol, RefKind, ImmutableArray<ITypeSymbol>, ImmutableArray<RefKind>, SignatureCallingConvention, ImmutableArray<INamedTypeSymbol>) method [.NET], class Compilation
  monikers:
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
