### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: controlVariable
    description: >-
      If the For or For Each statement is of a form that does not declare a new loop

      control variable, this is the expression that denotes the loop control

      variable. If this loop is of a form that does declare a new control variable,

      this is a VariableDeclarator that has the variable being declared.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode?alt=Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode&text=VisualBasicSyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fromValue
    description: The expression denoting the initial value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: toValue
    description: The expression denoting the final value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  name: ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax)
  nameWithType: SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ controlVariable, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ fromValue, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ toValue);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax fromValue, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax toValue);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (controlVariable As VisualBasicSyntaxNode, fromValue As ExpressionSyntax, toValue As ExpressionSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    The For statement that begins a For-Next block. This statement always occurs as

    the Begin of a ForBlock. Most of the time, the End of that ForBlock is the

    corresponding Next statement. However, multiple nested For statements are ended

    by a single Next statement with multiple variables, then the inner For

    statements will have End set to Nothing, and the Next statement is the End of

    the outermost For statement that is being ended.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: controlVariable
    description: >-
      If the For or For Each statement is of a form that does not declare a new loop

      control variable, this is the expression that denotes the loop control

      variable. If this loop is of a form that does declare a new control variable,

      this is a VariableDeclarator that has the variable being declared.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode?alt=Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode&text=VisualBasicSyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fromValue
    description: The expression denoting the initial value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: toValue
    description: The expression denoting the final value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: stepClause
    description: The optional Step clause.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax&text=ForStepClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)
  name: ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax, ForStepClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax, ForStepClauseSyntax)
  nameWithType: SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax, ForStepClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ controlVariable, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ fromValue, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ toValue, Microsoft::CodeAnalysis::VisualBasic::Syntax::ForStepClauseSyntax ^ stepClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax fromValue, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax toValue, Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax stepClause);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (controlVariable As VisualBasicSyntaxNode, fromValue As ExpressionSyntax, toValue As ExpressionSyntax, stepClause As ForStepClauseSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    The For statement that begins a For-Next block. This statement always occurs as

    the Begin of a ForBlock. Most of the time, the End of that ForBlock is the

    corresponding Next statement. However, multiple nested For statements are ended

    by a single Next statement with multiple variables, then the inner For

    statements will have End set to Nothing, and the Next statement is the End of

    the outermost For statement that is being ended.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: forKeyword
    description: The "For" keyword.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: controlVariable
    description: >-
      If the For or For Each statement is of a form that does not declare a new loop

      control variable, this is the expression that denotes the loop control

      variable. If this loop is of a form that does declare a new control variable,

      this is a VariableDeclarator that has the variable being declared.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode?alt=Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode&text=VisualBasicSyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: equalsToken
    description: The "=" token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fromValue
    description: The expression denoting the initial value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: toKeyword
    description: The "To" keyword.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: toValue
    description: The expression denoting the final value of the iteration.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: stepClause
    description: The optional Step clause.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax&text=ForStepClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)
  name: ForStatement(SyntaxToken, VisualBasicSyntaxNode, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, ForStepClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(SyntaxToken, VisualBasicSyntaxNode, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, ForStepClauseSyntax)
  nameWithType: SyntaxFactory.ForStatement(SyntaxToken, VisualBasicSyntaxNode, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, ForStepClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::SyntaxToken forKeyword, Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ controlVariable, Microsoft::CodeAnalysis::SyntaxToken equalsToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ fromValue, Microsoft::CodeAnalysis::SyntaxToken toKeyword, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ toValue, Microsoft::CodeAnalysis::VisualBasic::Syntax::ForStepClauseSyntax ^ stepClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.SyntaxToken forKeyword, Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable, Microsoft.CodeAnalysis.SyntaxToken equalsToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax fromValue, Microsoft.CodeAnalysis.SyntaxToken toKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax toValue, Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax stepClause);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (forKeyword As SyntaxToken, controlVariable As VisualBasicSyntaxNode, equalsToken As SyntaxToken, fromValue As ExpressionSyntax, toKeyword As SyntaxToken, toValue As ExpressionSyntax, stepClause As ForStepClauseSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    The For statement that begins a For-Next block. This statement always occurs as

    the Begin of a ForBlock. Most of the time, the End of that ForBlock is the

    corresponding Next statement. However, multiple nested For statements are ended

    by a single Next statement with multiple variables, then the inner For

    statements will have End set to Nothing, and the Next statement is the End of

    the outermost For statement that is being ended.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement
namespace: Microsoft.CodeAnalysis.VisualBasic
name: ForStatement
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement
nameWithType: SyntaxFactory.ForStatement
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::ForStatement
  - ForStatement
  - SyntaxFactory.ForStatement
  - SyntaxFactory::ForStatement
  helpviewer_keywords:
  - SyntaxFactory.ForStatement method [.NET]
  - ForStatement method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax) method [.NET]
  - ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax, ForStepClauseSyntax) method [.NET]
  - ForStatement(VisualBasicSyntaxNode, ExpressionSyntax, ExpressionSyntax, ForStepClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(SyntaxToken, VisualBasicSyntaxNode, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, ForStepClauseSyntax) method [.NET]
  - ForStatement(SyntaxToken, VisualBasicSyntaxNode, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, ForStepClauseSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
