### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: token
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo(Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo(Microsoft.CodeAnalysis.SyntaxToken)
  name: IsIncrementallyIdenticalTo(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo(SyntaxToken)
  nameWithType: SyntaxToken.IsIncrementallyIdenticalTo(SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool IsIncrementallyIdenticalTo (Microsoft.CodeAnalysis.SyntaxToken token);
  - lang: fsharp
    values:
    - value: 'member this.IsIncrementallyIdenticalTo : Microsoft.CodeAnalysis.SyntaxToken -> bool'
  - lang: vb
    values:
    - value: Public Function IsIncrementallyIdenticalTo (token As SyntaxToken) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns true if these two tokens are considered "incrementally identical".  An incrementally identical token

    occurs when a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxToken.SyntaxTree"></xref> is incrementally parsed using <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)"></xref>

    and the incremental parser is able to take the token from the original tree and use it in its entirety in the

    new tree.  In this case, the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxToken.ToFullString"></xref> of each token will be the same, though 

    they could have different parents, and may occur at different positions in the respective trees.  If two tokens are

    incrementally identical, all trivial of each node will be incrementally identical as well.
  remarks: <p>Incrementally identical tokens can also appear within the same syntax tree, or syntax trees that did not arise from <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)"></xref>.  This can happen as the parser is allowed to construct parse trees using shared tokens for efficiency.  In all these cases though, it will still remain true that the incrementally identical tokens could have different parents and may occur at different positions in their respective trees.</p>
  metadata: {}
uid: Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo*
commentId: Overload:Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo
namespace: Microsoft.CodeAnalysis
name: IsIncrementallyIdenticalTo
fullName: Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo
nameWithType: SyntaxToken.IsIncrementallyIdenticalTo
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.SyntaxToken.IsIncrementallyIdenticalTo
  - Microsoft::CodeAnalysis::SyntaxToken::IsIncrementallyIdenticalTo
  - IsIncrementallyIdenticalTo
  - SyntaxToken.IsIncrementallyIdenticalTo
  - SyntaxToken::IsIncrementallyIdenticalTo
  helpviewer_keywords:
  - SyntaxToken.IsIncrementallyIdenticalTo method [.NET]
  - IsIncrementallyIdenticalTo method [.NET], struct SyntaxToken
  - SyntaxToken.IsIncrementallyIdenticalTo(SyntaxToken) method [.NET]
  - IsIncrementallyIdenticalTo(SyntaxToken) method [.NET], struct SyntaxToken
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
