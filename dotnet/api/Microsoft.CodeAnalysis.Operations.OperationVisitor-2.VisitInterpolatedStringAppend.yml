### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: TResult
  parameters:
  - namesWithMoniker:
    - value: operation
    type: <xref href="Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation?alt=Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation&text=IInterpolatedStringAppendOperation" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: argument
    type: TArgument
  type: method
  uid: Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend(Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation,`0)
  commentId: M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend(Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation,`0)
  name: VisitInterpolatedStringAppend(IInterpolatedStringAppendOperation, TArgument)
  fullName: Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend(IInterpolatedStringAppendOperation, TArgument)
  nameWithType: OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend(IInterpolatedStringAppendOperation, TArgument)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual TResult? VisitInterpolatedStringAppend (Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation operation, TArgument argument);
  - lang: fsharp
    values:
    - value: >-
        abstract member VisitInterpolatedStringAppend : Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation * 'Argument -> 'Result

        override this.VisitInterpolatedStringAppend : Microsoft.CodeAnalysis.Operations.IInterpolatedStringAppendOperation * 'Argument -> 'Result
  - lang: vb
    values:
    - value: Public Overridable Function VisitInterpolatedStringAppend (operation As IInterpolatedStringAppendOperation, argument As TArgument) As TResult
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
uid: Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend*
commentId: Overload:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend
namespace: Microsoft.CodeAnalysis.Operations
name: VisitInterpolatedStringAppend
fullName: Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend
nameWithType: OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringAppend
  - Microsoft::CodeAnalysis::Operations::OperationVisitor`2::VisitInterpolatedStringAppend
  - Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInterpolatedStringAppend
  - VisitInterpolatedStringAppend
  - OperationVisitor`2.VisitInterpolatedStringAppend
  - OperationVisitor`2::VisitInterpolatedStringAppend
  helpviewer_keywords:
  - OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend method [.NET]
  - VisitInterpolatedStringAppend method [.NET], class OperationVisitor<TArgument,TResult>
  - OperationVisitor<TArgument,TResult>.VisitInterpolatedStringAppend(IInterpolatedStringAppendOperation, TArgument) method [.NET]
  - VisitInterpolatedStringAppend(IInterpolatedStringAppendOperation, TArgument) method [.NET], class OperationVisitor<TArgument,TResult>
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
