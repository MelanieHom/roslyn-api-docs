### YamlMime:NetMember
type: method
members:
- typeParameters:
  - description: The specific type of the element nodes.
    name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1
  name: SeparatedList<TNode>()
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList<TNode>()
  nameWithType: SyntaxFactory.SeparatedList<TNode>()
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode static Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> SeparatedList();
  - lang: csharp
    values:
    - value: 'public static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> SeparatedList<TNode> () where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member SeparatedList : unit -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: Public Shared Function SeparatedList(Of TNode As SyntaxNode) () As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates an empty separated list.
  metadata: {}
- typeParameters:
  - description: The specific type of the element nodes.
    name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: nodesAndTokens
    description: An alternating list of nodes and tokens.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNodeOrTokenList?alt=Microsoft.CodeAnalysis.SyntaxNodeOrTokenList&text=SyntaxNodeOrTokenList" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)
  name: SeparatedList<TNode>(SyntaxNodeOrTokenList)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList<TNode>(SyntaxNodeOrTokenList)
  nameWithType: SyntaxFactory.SeparatedList<TNode>(SyntaxNodeOrTokenList)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode static Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> SeparatedList(Microsoft::CodeAnalysis::SyntaxNodeOrTokenList nodesAndTokens);
  - lang: csharp
    values:
    - value: 'public static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> SeparatedList<TNode> (Microsoft.CodeAnalysis.SyntaxNodeOrTokenList nodesAndTokens) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member SeparatedList : Microsoft.CodeAnalysis.SyntaxNodeOrTokenList -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: Public Shared Function SeparatedList(Of TNode As SyntaxNode) (nodesAndTokens As SyntaxNodeOrTokenList) As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Creates a separated list from a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxNodeOrTokenList"></xref>.

    The <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxNodeOrTokenList"></xref> must start with a node and alternate between nodes and separator tokens.
  metadata: {}
- typeParameters:
  - description: The specific type of the element nodes.
    name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: nodesAndTokens
    description: A alternating sequence of nodes and tokens.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.SyntaxNodeOrToken?alt=Microsoft.CodeAnalysis.SyntaxNodeOrToken&text=SyntaxNodeOrToken" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})
  name: SeparatedList<TNode>(IEnumerable<SyntaxNodeOrToken>)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList<TNode>(IEnumerable<SyntaxNodeOrToken>)
  nameWithType: SyntaxFactory.SeparatedList<TNode>(IEnumerable<SyntaxNodeOrToken>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode static Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> SeparatedList(System::Collections::Generic::IEnumerable<Microsoft::CodeAnalysis::SyntaxNodeOrToken> ^ nodesAndTokens);
  - lang: csharp
    values:
    - value: 'public static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> SeparatedList<TNode> (System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNodeOrToken> nodesAndTokens) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member SeparatedList : seq<Microsoft.CodeAnalysis.SyntaxNodeOrToken> -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: Public Shared Function SeparatedList(Of TNode As SyntaxNode) (nodesAndTokens As IEnumerable(Of SyntaxNodeOrToken)) As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Creates a separated list from a sequence of nodes or tokens.

    The sequence must start with a node and alternate between nodes and separator tokens.
  metadata: {}
- typeParameters:
  - description: The specific type of the element nodes.
    name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: nodes
    description: A sequence of syntax nodes.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;TNode&gt;
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0})
  name: SeparatedList<TNode>(IEnumerable<TNode>)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>)
  nameWithType: SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode static Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> SeparatedList(System::Collections::Generic::IEnumerable<TNode> ^ nodes);
  - lang: csharp
    values:
    - value: 'public static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> SeparatedList<TNode> (System.Collections.Generic.IEnumerable<TNode> nodes) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member SeparatedList : seq<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: Public Shared Function SeparatedList(Of TNode As SyntaxNode) (nodes As IEnumerable(Of TNode)) As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a separated list of nodes from a sequence of nodes, synthesizing comma separators in between.
  metadata: {}
- typeParameters:
  - description: The specific type of the element nodes.
    name: TNode
  returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList`1&text=SeparatedSyntaxList%3CTNode%3E" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: nodes
    description: A sequence of syntax nodes.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;TNode&gt;
  - namesWithMoniker:
    - value: separators
    description: >-
      A sequence of token to be interleaved between the nodes. The number of tokens must
       be one less than the number of nodes.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})
  name: SeparatedList<TNode>(IEnumerable<TNode>, IEnumerable<SyntaxToken>)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>, IEnumerable<SyntaxToken>)
  nameWithType: SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>, IEnumerable<SyntaxToken>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        generic <typename TNode>
         where TNode : Microsoft::CodeAnalysis::SyntaxNode static Microsoft::CodeAnalysis::SeparatedSyntaxList<TNode> SeparatedList(System::Collections::Generic::IEnumerable<TNode> ^ nodes, System::Collections::Generic::IEnumerable<Microsoft::CodeAnalysis::SyntaxToken> ^ separators);
  - lang: csharp
    values:
    - value: 'public static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> SeparatedList<TNode> (System.Collections.Generic.IEnumerable<TNode> nodes, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> separators) where TNode : Microsoft.CodeAnalysis.SyntaxNode;'
  - lang: fsharp
    values:
    - value: "static member SeparatedList : seq<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> * seq<Microsoft.CodeAnalysis.SyntaxToken> -> Microsoft.CodeAnalysis.SeparatedSyntaxList<'Node (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)> (requires 'Node :> Microsoft.CodeAnalysis.SyntaxNode)"
  - lang: vb
    values:
    - value: Public Shared Function SeparatedList(Of TNode As SyntaxNode) (nodes As IEnumerable(Of TNode), separators As IEnumerable(Of SyntaxToken)) As SeparatedSyntaxList(Of TNode)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a separated list of nodes from a sequence of nodes and a sequence of separator tokens.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList
namespace: Microsoft.CodeAnalysis.VisualBasic
name: SeparatedList
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList
nameWithType: SyntaxFactory.SeparatedList
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::SeparatedList
  - SeparatedList
  - SyntaxFactory.SeparatedList
  - SyntaxFactory::SeparatedList
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::SeparatedList``1
  - SeparatedList``1
  - SyntaxFactory.SeparatedList``1
  - SyntaxFactory::SeparatedList``1
  helpviewer_keywords:
  - SyntaxFactory.SeparatedList method [.NET]
  - SeparatedList method [.NET], class SyntaxFactory
  - SyntaxFactory.SeparatedList<TNode>() method [.NET]
  - SeparatedList<TNode>() method [.NET], class SyntaxFactory
  - SyntaxFactory.SeparatedList<TNode>(SyntaxNodeOrTokenList) method [.NET]
  - SeparatedList<TNode>(SyntaxNodeOrTokenList) method [.NET], class SyntaxFactory
  - SyntaxFactory.SeparatedList<TNode>(IEnumerable<SyntaxNodeOrToken>) method [.NET]
  - SeparatedList<TNode>(IEnumerable<SyntaxNodeOrToken>) method [.NET], class SyntaxFactory
  - SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>) method [.NET]
  - SeparatedList<TNode>(IEnumerable<TNode>) method [.NET], class SyntaxFactory
  - SyntaxFactory.SeparatedList<TNode>(IEnumerable<TNode>, IEnumerable<SyntaxToken>) method [.NET]
  - SeparatedList<TNode>(IEnumerable<TNode>, IEnumerable<SyntaxToken>) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
