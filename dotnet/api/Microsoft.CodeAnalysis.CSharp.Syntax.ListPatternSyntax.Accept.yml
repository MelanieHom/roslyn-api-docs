### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: visitor
    type: <xref href="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor?alt=Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&text=CSharpSyntaxVisitor" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  commentId: M:Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept(CSharpSyntaxVisitor)
  nameWithType: ListPatternSyntax.Accept(CSharpSyntaxVisitor)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public override void Accept (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor visitor);
  - lang: fsharp
    values:
    - value: 'override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor -> unit'
  - lang: vb
    values:
    - value: Public Overrides Sub Accept (visitor As CSharpSyntaxVisitor)
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
- typeParameters:
  - name: TResult
  returnsWithMoniker:
    type:
    - value: TResult
  parameters:
  - namesWithMoniker:
    - value: visitor
    type: <xref href="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1?alt=Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1&text=CSharpSyntaxVisitor%3CTResult%3E" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  commentId: M:Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  nameWithType: ListPatternSyntax.Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public override TResult? Accept<TResult> (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult> visitor);
  - lang: fsharp
    values:
    - value: "override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<'Result> -> 'Result"
  - lang: vb
    values:
    - value: Public Overrides Function Accept(Of TResult) (visitor As CSharpSyntaxVisitor(Of TResult)) As TResult
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept
namespace: Microsoft.CodeAnalysis.CSharp.Syntax
name: Accept
fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept
nameWithType: ListPatternSyntax.Accept
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept
  - Microsoft::CodeAnalysis::CSharp::Syntax::ListPatternSyntax::Accept
  - Accept
  - ListPatternSyntax.Accept
  - ListPatternSyntax::Accept
  - Microsoft.CodeAnalysis.CSharp.Syntax.ListPatternSyntax.Accept``1
  - Microsoft::CodeAnalysis::CSharp::Syntax::ListPatternSyntax::Accept``1
  - Accept``1
  - ListPatternSyntax.Accept``1
  - ListPatternSyntax::Accept``1
  helpviewer_keywords:
  - ListPatternSyntax.Accept method [.NET]
  - Accept method [.NET], class ListPatternSyntax
  - ListPatternSyntax.Accept(CSharpSyntaxVisitor) method [.NET]
  - Accept(CSharpSyntaxVisitor) method [.NET], class ListPatternSyntax
  - ListPatternSyntax.Accept<TResult>(CSharpSyntaxVisitor<TResult>) method [.NET]
  - Accept<TResult>(CSharpSyntaxVisitor<TResult>) method [.NET], class ListPatternSyntax
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
