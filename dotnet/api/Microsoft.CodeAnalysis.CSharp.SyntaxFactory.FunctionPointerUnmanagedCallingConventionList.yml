### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax&text=FunctionPointerUnmanagedCallingConventionListSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: callingConventions
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax&text=FunctionPointerUnmanagedCallingConventionSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax})
  name: FunctionPointerUnmanagedCallingConventionList(SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>)
  nameWithType: SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax FunctionPointerUnmanagedCallingConventionList (Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax> callingConventions = default);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerUnmanagedCallingConventionList : Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerUnmanagedCallingConventionList (Optional callingConventions As SeparatedSyntaxList(Of FunctionPointerUnmanagedCallingConventionSyntax) = Nothing) As FunctionPointerUnmanagedCallingConventionListSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FunctionPointerUnmanagedCallingConventionListSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax&text=FunctionPointerUnmanagedCallingConventionListSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: openBracketToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: callingConventions
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax&text=FunctionPointerUnmanagedCallingConventionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: closeBracketToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  name: FunctionPointerUnmanagedCallingConventionList(SyntaxToken, SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SyntaxToken, SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>, SyntaxToken)
  nameWithType: SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SyntaxToken, SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax FunctionPointerUnmanagedCallingConventionList (Microsoft.CodeAnalysis.SyntaxToken openBracketToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax> callingConventions, Microsoft.CodeAnalysis.SyntaxToken closeBracketToken);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerUnmanagedCallingConventionList : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionSyntax> * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerUnmanagedCallingConventionListSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerUnmanagedCallingConventionList (openBracketToken As SyntaxToken, callingConventions As SeparatedSyntaxList(Of FunctionPointerUnmanagedCallingConventionSyntax), closeBracketToken As SyntaxToken) As FunctionPointerUnmanagedCallingConventionListSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FunctionPointerUnmanagedCallingConventionListSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
namespace: Microsoft.CodeAnalysis.CSharp
name: FunctionPointerUnmanagedCallingConventionList
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
nameWithType: SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::FunctionPointerUnmanagedCallingConventionList
  - FunctionPointerUnmanagedCallingConventionList
  - SyntaxFactory.FunctionPointerUnmanagedCallingConventionList
  - SyntaxFactory::FunctionPointerUnmanagedCallingConventionList
  helpviewer_keywords:
  - SyntaxFactory.FunctionPointerUnmanagedCallingConventionList method [.NET]
  - FunctionPointerUnmanagedCallingConventionList method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>) method [.NET]
  - FunctionPointerUnmanagedCallingConventionList(SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerUnmanagedCallingConventionList(SyntaxToken, SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>, SyntaxToken) method [.NET]
  - FunctionPointerUnmanagedCallingConventionList(SyntaxToken, SeparatedSyntaxList<FunctionPointerUnmanagedCallingConventionSyntax>, SyntaxToken) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
