### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: forKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializers
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: firstSemicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: condition
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: secondSemicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: incrementors
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: closeParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: ForStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  nameWithType: SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxToken forKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.SyntaxToken firstSemicolonToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? condition, Microsoft.CodeAnalysis.SyntaxToken secondSemicolonToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (attributeLists As SyntaxList(Of AttributeListSyntax), forKeyword As SyntaxToken, openParenToken As SyntaxToken, declaration As VariableDeclarationSyntax, initializers As SeparatedSyntaxList(Of ExpressionSyntax), firstSemicolonToken As SyntaxToken, condition As ExpressionSyntax, secondSemicolonToken As SyntaxToken, incrementors As SeparatedSyntaxList(Of ExpressionSyntax), closeParenToken As SyntaxToken, statement As StatementSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new ForStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializers
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: condition
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: incrementors
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: ForStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  nameWithType: SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? condition, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (attributeLists As SyntaxList(Of AttributeListSyntax), declaration As VariableDeclarationSyntax, initializers As SeparatedSyntaxList(Of ExpressionSyntax), condition As ExpressionSyntax, incrementors As SeparatedSyntaxList(Of ExpressionSyntax), statement As StatementSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new ForStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: forKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializers
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: firstSemicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: condition
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: secondSemicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: incrementors
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: closeParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: ForStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  nameWithType: SyntaxFactory.ForStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::SyntaxToken forKeyword, Microsoft::CodeAnalysis::SyntaxToken openParenToken, Microsoft::CodeAnalysis::CSharp::Syntax::VariableDeclarationSyntax ^ declaration, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^> initializers, Microsoft::CodeAnalysis::SyntaxToken firstSemicolonToken, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ condition, Microsoft::CodeAnalysis::SyntaxToken secondSemicolonToken, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^> incrementors, Microsoft::CodeAnalysis::SyntaxToken closeParenToken, Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.SyntaxToken forKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.SyntaxToken firstSemicolonToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax condition, Microsoft.CodeAnalysis.SyntaxToken secondSemicolonToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.SyntaxToken forKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.SyntaxToken firstSemicolonToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? condition, Microsoft.CodeAnalysis.SyntaxToken secondSemicolonToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (forKeyword As SyntaxToken, openParenToken As SyntaxToken, declaration As VariableDeclarationSyntax, initializers As SeparatedSyntaxList(Of ExpressionSyntax), firstSemicolonToken As SyntaxToken, condition As ExpressionSyntax, secondSemicolonToken As SyntaxToken, incrementors As SeparatedSyntaxList(Of ExpressionSyntax), closeParenToken As SyntaxToken, statement As StatementSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new ForStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: ForStatement(StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(StatementSyntax)
  nameWithType: SyntaxFactory.ForStatement(StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (statement As StatementSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new ForStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax&text=ForStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializers
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: condition
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: incrementors
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: ForStatement(VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  nameWithType: SyntaxFactory.ForStatement(VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::ForStatementSyntax ^ ForStatement(Microsoft::CodeAnalysis::CSharp::Syntax::VariableDeclarationSyntax ^ declaration, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^> initializers, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ condition, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^> incrementors, Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax condition, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax ForStatement (Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> initializers, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? condition, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> incrementors, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member ForStatement : Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function ForStatement (declaration As VariableDeclarationSyntax, initializers As SeparatedSyntaxList(Of ExpressionSyntax), condition As ExpressionSyntax, incrementors As SeparatedSyntaxList(Of ExpressionSyntax), statement As StatementSyntax) As ForStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new ForStatementSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement
namespace: Microsoft.CodeAnalysis.CSharp
name: ForStatement
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement
nameWithType: SyntaxFactory.ForStatement
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
devLangs:
- csharp
- vb
- fsharp
- cpp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::ForStatement
  - ForStatement
  - SyntaxFactory.ForStatement
  - SyntaxFactory::ForStatement
  helpviewer_keywords:
  - SyntaxFactory.ForStatement method [.NET]
  - ForStatement method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax) method [.NET]
  - ForStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax) method [.NET]
  - ForStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax) method [.NET]
  - ForStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(StatementSyntax) method [.NET]
  - ForStatement(StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.ForStatement(VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax) method [.NET]
  - ForStatement(VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, ExpressionSyntax, SeparatedSyntaxList<ExpressionSyntax>, StatementSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
