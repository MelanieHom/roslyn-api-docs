### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: TResult
  parameters:
  - namesWithMoniker:
    - value: node
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax&text=BaseExpressionTypeClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax)
  name: VisitBaseExpressionTypeClause(BaseExpressionTypeClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause(BaseExpressionTypeClauseSyntax)
  nameWithType: CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause(BaseExpressionTypeClauseSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual TResult VisitBaseExpressionTypeClause (Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax node);
  - lang: fsharp
    values:
    - value: >-
        abstract member VisitBaseExpressionTypeClause : Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax -> 'Result

        override this.VisitBaseExpressionTypeClause : Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionTypeClauseSyntax -> 'Result
  - lang: vb
    values:
    - value: Public Overridable Function VisitBaseExpressionTypeClause (node As BaseExpressionTypeClauseSyntax) As TResult
  monikers:
  - roslyn-dotnet-3.1
  summary: Called when the visitor visits a BaseExpressionTypeClauseSyntax node.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause
namespace: Microsoft.CodeAnalysis.CSharp
name: VisitBaseExpressionTypeClause
fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause
nameWithType: CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-3.1
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause
  - Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor`1::VisitBaseExpressionTypeClause
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBaseExpressionTypeClause
  - VisitBaseExpressionTypeClause
  - CSharpSyntaxVisitor`1.VisitBaseExpressionTypeClause
  - CSharpSyntaxVisitor`1::VisitBaseExpressionTypeClause
  helpviewer_keywords:
  - CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause method [.NET]
  - VisitBaseExpressionTypeClause method [.NET], class CSharpSyntaxVisitor<TResult>
  - CSharpSyntaxVisitor<TResult>.VisitBaseExpressionTypeClause(BaseExpressionTypeClauseSyntax) method [.NET]
  - VisitBaseExpressionTypeClause(BaseExpressionTypeClauseSyntax) method [.NET], class CSharpSyntaxVisitor<TResult>
  monikers:
  - roslyn-dotnet-3.1
