### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    description: A syntax kind value for a token. These have the suffix Token or Keyword.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.CSharp.SyntaxKind)
  name: Token(SyntaxKind)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(SyntaxKind)
  nameWithType: SyntaxFactory.Token(SyntaxKind)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::SyntaxToken Token(Microsoft::CodeAnalysis::CSharp::SyntaxKind kind);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.SyntaxToken Token (Microsoft.CodeAnalysis.CSharp.SyntaxKind kind);
  - lang: fsharp
    values:
    - value: 'static member Token : Microsoft.CodeAnalysis.CSharp.SyntaxKind -> Microsoft.CodeAnalysis.SyntaxToken'
  - lang: vb
    values:
    - value: Public Shared Function Token (kind As SyntaxKind) As SyntaxToken
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Creates a token corresponding to a syntax kind. This method can be used for token syntax kinds whose text

    can be inferred by the kind alone.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: leading
    description: A list of trivia immediately preceding the token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTriviaList?alt=Microsoft.CodeAnalysis.SyntaxTriviaList&text=SyntaxTriviaList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: A syntax kind value for a token. These have the suffix Token or Keyword.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: trailing
    description: A list of trivia immediately following the token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTriviaList?alt=Microsoft.CodeAnalysis.SyntaxTriviaList&text=SyntaxTriviaList" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList)
  name: Token(SyntaxTriviaList, SyntaxKind, SyntaxTriviaList)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, SyntaxTriviaList)
  nameWithType: SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, SyntaxTriviaList)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::SyntaxToken Token(Microsoft::CodeAnalysis::SyntaxTriviaList leading, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind, Microsoft::CodeAnalysis::SyntaxTriviaList trailing);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.SyntaxToken Token (Microsoft.CodeAnalysis.SyntaxTriviaList leading, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxTriviaList trailing);
  - lang: fsharp
    values:
    - value: 'static member Token : Microsoft.CodeAnalysis.SyntaxTriviaList * Microsoft.CodeAnalysis.CSharp.SyntaxKind * Microsoft.CodeAnalysis.SyntaxTriviaList -> Microsoft.CodeAnalysis.SyntaxToken'
  - lang: vb
    values:
    - value: Public Shared Function Token (leading As SyntaxTriviaList, kind As SyntaxKind, trailing As SyntaxTriviaList) As SyntaxToken
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Creates a token corresponding to syntax kind. This method can be used for token syntax kinds whose text can

    be inferred by the kind alone.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: leading
    description: A list of trivia immediately preceding the token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTriviaList?alt=Microsoft.CodeAnalysis.SyntaxTriviaList&text=SyntaxTriviaList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: kind
    description: A syntax kind value for a token. These have the suffix Token or Keyword.
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: text
    description: The text from which this token was created (e.g. lexed).
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: valueText
    description: How C# should interpret the text of this token.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: trailing
    description: A list of trivia immediately following the token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTriviaList?alt=Microsoft.CodeAnalysis.SyntaxTriviaList&text=SyntaxTriviaList" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)
  name: Token(SyntaxTriviaList, SyntaxKind, String, String, SyntaxTriviaList)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, String, String, SyntaxTriviaList)
  nameWithType: SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, String, String, SyntaxTriviaList)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::SyntaxToken Token(Microsoft::CodeAnalysis::SyntaxTriviaList leading, Microsoft::CodeAnalysis::CSharp::SyntaxKind kind, System::String ^ text, System::String ^ valueText, Microsoft::CodeAnalysis::SyntaxTriviaList trailing);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.SyntaxToken Token (Microsoft.CodeAnalysis.SyntaxTriviaList leading, Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, string text, string valueText, Microsoft.CodeAnalysis.SyntaxTriviaList trailing);
  - lang: fsharp
    values:
    - value: 'static member Token : Microsoft.CodeAnalysis.SyntaxTriviaList * Microsoft.CodeAnalysis.CSharp.SyntaxKind * string * string * Microsoft.CodeAnalysis.SyntaxTriviaList -> Microsoft.CodeAnalysis.SyntaxToken'
  - lang: vb
    values:
    - value: Public Shared Function Token (leading As SyntaxTriviaList, kind As SyntaxKind, text As String, valueText As String, trailing As SyntaxTriviaList) As SyntaxToken
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Creates a token corresponding to syntax kind. This method gives control over token Text and ValueText.


    For example, consider the text '&lt;see cref="operator &amp;#43;"/&gt;'.  To create a token for the value of

    the operator symbol (&amp;#43;), one would call 

    Token(default(SyntaxTriviaList), SyntaxKind.PlusToken, "&amp;#43;", "+", default(SyntaxTriviaList)).
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token
namespace: Microsoft.CodeAnalysis.CSharp
name: Token
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token
nameWithType: SyntaxFactory.Token
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::Token
  - Token
  - SyntaxFactory.Token
  - SyntaxFactory::Token
  helpviewer_keywords:
  - SyntaxFactory.Token method [.NET]
  - Token method [.NET], class SyntaxFactory
  - SyntaxFactory.Token(SyntaxKind) method [.NET]
  - Token(SyntaxKind) method [.NET], class SyntaxFactory
  - SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, SyntaxTriviaList) method [.NET]
  - Token(SyntaxTriviaList, SyntaxKind, SyntaxTriviaList) method [.NET], class SyntaxFactory
  - SyntaxFactory.Token(SyntaxTriviaList, SyntaxKind, String, String, SyntaxTriviaList) method [.NET]
  - Token(SyntaxTriviaList, SyntaxKind, String, String, SyntaxTriviaList) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
