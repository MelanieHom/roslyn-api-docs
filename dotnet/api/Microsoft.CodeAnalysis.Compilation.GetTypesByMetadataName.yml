### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>&gt;
    description: Empty array if no types match. Otherwise, all types that match the name, current assembly first if present.
  parameters:
  - namesWithMoniker:
    - value: fullyQualifiedMetadataName
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName(System.String)
  commentId: M:Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName(System.String)
  name: GetTypesByMetadataName(String)
  fullName: Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName(String)
  nameWithType: Compilation.GetTypesByMetadataName(String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.INamedTypeSymbol> GetTypesByMetadataName (string fullyQualifiedMetadataName);
  - lang: fsharp
    values:
    - value: 'member this.GetTypesByMetadataName : string -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.INamedTypeSymbol>'
  - lang: vb
    values:
    - value: Public Function GetTypesByMetadataName (fullyQualifiedMetadataName As String) As ImmutableArray(Of INamedTypeSymbol)
  monikers:
  - roslyn-dotnet-4.2.0
  summary: >-
    Gets all types with the compilation's assembly and all referenced assemblies that have the

    given canonical CLR metadata name. Accessibility to the current assembly is ignored when

    searching for matching type names.
  remarks: <p>Assemblies can contain multiple modules. Within each assembly, the search is performed based on module's position in the module list of that assembly. When a match is found in one module in an assembly, no further modules within that assembly are searched.</p><p>Type forwarders are ignored, and not considered part of the assembly where the TypeForwardAttribute is written.</p>
  metadata: {}
uid: Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName*
commentId: Overload:Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName
namespace: Microsoft.CodeAnalysis
name: GetTypesByMetadataName
fullName: Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName
nameWithType: Compilation.GetTypesByMetadataName
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Compilation.GetTypesByMetadataName
  - Microsoft::CodeAnalysis::Compilation::GetTypesByMetadataName
  - GetTypesByMetadataName
  - Compilation.GetTypesByMetadataName
  - Compilation::GetTypesByMetadataName
  helpviewer_keywords:
  - Compilation.GetTypesByMetadataName method [.NET]
  - GetTypesByMetadataName method [.NET], class Compilation
  - Compilation.GetTypesByMetadataName(String) method [.NET]
  - GetTypesByMetadataName(String) method [.NET], class Compilation
  monikers:
  - roslyn-dotnet-4.2.0
