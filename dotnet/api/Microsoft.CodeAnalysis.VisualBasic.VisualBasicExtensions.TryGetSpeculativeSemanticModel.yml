### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: position
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rangeArgument
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax&text=RangeArgumentSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: speculativeModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  name: TryGetSpeculativeSemanticModel(SemanticModel, Int32, RangeArgumentSyntax, SemanticModel)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, RangeArgumentSyntax, SemanticModel)
  nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, RangeArgumentSyntax, SemanticModel)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool TryGetSpeculativeSemanticModel(Microsoft::CodeAnalysis::SemanticModel ^ semanticModel, int position, Microsoft::CodeAnalysis::VisualBasic::Syntax::RangeArgumentSyntax ^ rangeArgument, [Runtime::InteropServices::Out] Microsoft::CodeAnalysis::SemanticModel ^ % speculativeModel);
  - lang: csharp
    values:
    - value: public static bool TryGetSpeculativeSemanticModel (this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax rangeArgument, out Microsoft.CodeAnalysis.SemanticModel speculativeModel);
  - lang: fsharp
    values:
    - value: 'static member TryGetSpeculativeSemanticModel : Microsoft.CodeAnalysis.SemanticModel * int * Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax * SemanticModel -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function TryGetSpeculativeSemanticModel (semanticModel As SemanticModel, position As Integer, rangeArgument As RangeArgumentSyntax, ByRef speculativeModel As SemanticModel) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the SemanticModel for a RangeArgumentSyntax at a given position, used in Semantic Info for items not appearing in source code.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: position
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax&text=ExecutableStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: speculativeModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  name: TryGetSpeculativeSemanticModel(SemanticModel, Int32, ExecutableStatementSyntax, SemanticModel)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, ExecutableStatementSyntax, SemanticModel)
  nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, ExecutableStatementSyntax, SemanticModel)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool TryGetSpeculativeSemanticModel(Microsoft::CodeAnalysis::SemanticModel ^ semanticModel, int position, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExecutableStatementSyntax ^ statement, [Runtime::InteropServices::Out] Microsoft::CodeAnalysis::SemanticModel ^ % speculativeModel);
  - lang: csharp
    values:
    - value: public static bool TryGetSpeculativeSemanticModel (this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax statement, out Microsoft.CodeAnalysis.SemanticModel speculativeModel);
  - lang: fsharp
    values:
    - value: 'static member TryGetSpeculativeSemanticModel : Microsoft.CodeAnalysis.SemanticModel * int * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax * SemanticModel -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function TryGetSpeculativeSemanticModel (semanticModel As SemanticModel, position As Integer, statement As ExecutableStatementSyntax, ByRef speculativeModel As SemanticModel) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the SemanticModel for a ExecutableStatementSyntax at a given position, used in Semantic Info for items not appearing in source code.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: position
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: type
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: speculativeModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: bindingOption
    type: <xref href="Microsoft.CodeAnalysis.SpeculativeBindingOption?alt=Microsoft.CodeAnalysis.SpeculativeBindingOption&text=SpeculativeBindingOption" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SemanticModel@,Microsoft.CodeAnalysis.SpeculativeBindingOption)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SemanticModel@,Microsoft.CodeAnalysis.SpeculativeBindingOption)
  name: TryGetSpeculativeSemanticModel(SemanticModel, Int32, TypeSyntax, SemanticModel, SpeculativeBindingOption)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, TypeSyntax, SemanticModel, SpeculativeBindingOption)
  nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, TypeSyntax, SemanticModel, SpeculativeBindingOption)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static bool TryGetSpeculativeSemanticModel (this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type, out Microsoft.CodeAnalysis.SemanticModel speculativeModel, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption = Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsExpression);
  - lang: fsharp
    values:
    - value: 'static member TryGetSpeculativeSemanticModel : Microsoft.CodeAnalysis.SemanticModel * int * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax * SemanticModel * Microsoft.CodeAnalysis.SpeculativeBindingOption -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function TryGetSpeculativeSemanticModel (semanticModel As SemanticModel, position As Integer, type As TypeSyntax, ByRef speculativeModel As SemanticModel, Optional bindingOption As SpeculativeBindingOption = Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsExpression) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the SemanticModel for a TypeSyntax at a given position, used in Semantic Info for items not appearing in source code.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: position
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attribute
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax&text=AttributeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: speculativeModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  name: TryGetSpeculativeSemanticModel(SemanticModel, Int32, AttributeSyntax, SemanticModel)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, AttributeSyntax, SemanticModel)
  nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, AttributeSyntax, SemanticModel)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool TryGetSpeculativeSemanticModel(Microsoft::CodeAnalysis::SemanticModel ^ semanticModel, int position, Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ attribute, [Runtime::InteropServices::Out] Microsoft::CodeAnalysis::SemanticModel ^ % speculativeModel);
  - lang: csharp
    values:
    - value: public static bool TryGetSpeculativeSemanticModel (this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax attribute, out Microsoft.CodeAnalysis.SemanticModel speculativeModel);
  - lang: fsharp
    values:
    - value: 'static member TryGetSpeculativeSemanticModel : Microsoft.CodeAnalysis.SemanticModel * int * Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax * SemanticModel -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function TryGetSpeculativeSemanticModel (semanticModel As SemanticModel, position As Integer, attribute As AttributeSyntax, ByRef speculativeModel As SemanticModel) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the SemanticModel for a AttributeSyntax at a given position, used in Semantic Info for items not appearing in source code.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: position
    type: <xref href="System.Int32?alt=System.Int32&text=Int32" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializer
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax&text=EqualsValueSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: speculativeModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.SemanticModel@)
  name: TryGetSpeculativeSemanticModel(SemanticModel, Int32, EqualsValueSyntax, SemanticModel)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, EqualsValueSyntax, SemanticModel)
  nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, EqualsValueSyntax, SemanticModel)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static bool TryGetSpeculativeSemanticModel(Microsoft::CodeAnalysis::SemanticModel ^ semanticModel, int position, Microsoft::CodeAnalysis::VisualBasic::Syntax::EqualsValueSyntax ^ initializer, [Runtime::InteropServices::Out] Microsoft::CodeAnalysis::SemanticModel ^ % speculativeModel);
  - lang: csharp
    values:
    - value: public static bool TryGetSpeculativeSemanticModel (this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax initializer, out Microsoft.CodeAnalysis.SemanticModel speculativeModel);
  - lang: fsharp
    values:
    - value: 'static member TryGetSpeculativeSemanticModel : Microsoft.CodeAnalysis.SemanticModel * int * Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax * SemanticModel -> bool'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function TryGetSpeculativeSemanticModel (semanticModel As SemanticModel, position As Integer, initializer As EqualsValueSyntax, ByRef speculativeModel As SemanticModel) As Boolean
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the SemanticModel for a EqualsValueSyntax at a given position, used in Semantic Info for items not appearing in source code.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel
namespace: Microsoft.CodeAnalysis.VisualBasic
name: TryGetSpeculativeSemanticModel
fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel
nameWithType: VisualBasicExtensions.TryGetSpeculativeSemanticModel
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel
  - Microsoft::CodeAnalysis::VisualBasic::VisualBasicExtensions::TryGetSpeculativeSemanticModel
  - TryGetSpeculativeSemanticModel
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel
  - VisualBasicExtensions::TryGetSpeculativeSemanticModel
  helpviewer_keywords:
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel method [.NET]
  - TryGetSpeculativeSemanticModel method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, RangeArgumentSyntax, SemanticModel) extension method [.NET]
  - TryGetSpeculativeSemanticModel(SemanticModel, Int32, RangeArgumentSyntax, SemanticModel) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, ExecutableStatementSyntax, SemanticModel) extension method [.NET]
  - TryGetSpeculativeSemanticModel(SemanticModel, Int32, ExecutableStatementSyntax, SemanticModel) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, TypeSyntax, SemanticModel, SpeculativeBindingOption) extension method [.NET]
  - TryGetSpeculativeSemanticModel(SemanticModel, Int32, TypeSyntax, SemanticModel, SpeculativeBindingOption) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, AttributeSyntax, SemanticModel) extension method [.NET]
  - TryGetSpeculativeSemanticModel(SemanticModel, Int32, AttributeSyntax, SemanticModel) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.TryGetSpeculativeSemanticModel(SemanticModel, Int32, EqualsValueSyntax, SemanticModel) extension method [.NET]
  - TryGetSpeculativeSemanticModel(SemanticModel, Int32, EqualsValueSyntax, SemanticModel) extension method [.NET], class VisualBasicExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
