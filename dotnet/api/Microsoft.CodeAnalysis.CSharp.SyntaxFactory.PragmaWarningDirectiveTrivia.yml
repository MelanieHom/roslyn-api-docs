### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax&text=PragmaWarningDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: hashToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: pragmaKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: warningKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: disableOrRestoreKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: nullableKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: endOfDirectiveToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax PragmaWarningDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken hashToken, Microsoft.CodeAnalysis.SyntaxToken pragmaKeyword, Microsoft.CodeAnalysis.SyntaxToken warningKeyword, Microsoft.CodeAnalysis.SyntaxToken disableOrRestoreKeyword, Microsoft.CodeAnalysis.SyntaxToken nullableKeyword, Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member PragmaWarningDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function PragmaWarningDirectiveTrivia (hashToken As SyntaxToken, pragmaKeyword As SyntaxToken, warningKeyword As SyntaxToken, disableOrRestoreKeyword As SyntaxToken, nullableKeyword As SyntaxToken, endOfDirectiveToken As SyntaxToken, isActive As Boolean) As PragmaWarningDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  summary: Creates a new PragmaWarningDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax&text=PragmaWarningDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: hashToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: pragmaKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: warningKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: disableOrRestoreKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: nullableKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: errorCodes
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: endOfDirectiveToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax PragmaWarningDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken hashToken, Microsoft.CodeAnalysis.SyntaxToken pragmaKeyword, Microsoft.CodeAnalysis.SyntaxToken warningKeyword, Microsoft.CodeAnalysis.SyntaxToken disableOrRestoreKeyword, Microsoft.CodeAnalysis.SyntaxToken nullableKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> errorCodes, Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member PragmaWarningDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function PragmaWarningDirectiveTrivia (hashToken As SyntaxToken, pragmaKeyword As SyntaxToken, warningKeyword As SyntaxToken, disableOrRestoreKeyword As SyntaxToken, nullableKeyword As SyntaxToken, errorCodes As SeparatedSyntaxList(Of ExpressionSyntax), endOfDirectiveToken As SyntaxToken, isActive As Boolean) As PragmaWarningDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  summary: Creates a new PragmaWarningDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax&text=PragmaWarningDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: disableOrRestoreKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: PragmaWarningDirectiveTrivia(SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::PragmaWarningDirectiveTriviaSyntax ^ PragmaWarningDirectiveTrivia(Microsoft::CodeAnalysis::SyntaxToken disableOrRestoreKeyword, bool isActive);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax PragmaWarningDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken disableOrRestoreKeyword, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member PragmaWarningDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function PragmaWarningDirectiveTrivia (disableOrRestoreKeyword As SyntaxToken, isActive As Boolean) As PragmaWarningDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new PragmaWarningDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax&text=PragmaWarningDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: disableOrRestoreKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: errorCodes
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},System.Boolean)
  name: PragmaWarningDirectiveTrivia(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, Boolean)
  nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, Boolean)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::PragmaWarningDirectiveTriviaSyntax ^ PragmaWarningDirectiveTrivia(Microsoft::CodeAnalysis::SyntaxToken disableOrRestoreKeyword, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^> errorCodes, bool isActive);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax PragmaWarningDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken disableOrRestoreKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> errorCodes, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member PragmaWarningDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function PragmaWarningDirectiveTrivia (disableOrRestoreKeyword As SyntaxToken, errorCodes As SeparatedSyntaxList(Of ExpressionSyntax), isActive As Boolean) As PragmaWarningDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new PragmaWarningDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax&text=PragmaWarningDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: hashToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: pragmaKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: warningKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: disableOrRestoreKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: errorCodes
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: endOfDirectiveToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax PragmaWarningDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken hashToken, Microsoft.CodeAnalysis.SyntaxToken pragmaKeyword, Microsoft.CodeAnalysis.SyntaxToken warningKeyword, Microsoft.CodeAnalysis.SyntaxToken disableOrRestoreKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> errorCodes, Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member PragmaWarningDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax> * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function PragmaWarningDirectiveTrivia (hashToken As SyntaxToken, pragmaKeyword As SyntaxToken, warningKeyword As SyntaxToken, disableOrRestoreKeyword As SyntaxToken, errorCodes As SeparatedSyntaxList(Of ExpressionSyntax), endOfDirectiveToken As SyntaxToken, isActive As Boolean) As PragmaWarningDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new PragmaWarningDirectiveTriviaSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia
namespace: Microsoft.CodeAnalysis.CSharp
name: PragmaWarningDirectiveTrivia
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia
nameWithType: SyntaxFactory.PragmaWarningDirectiveTrivia
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
- cpp
monikers:
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::PragmaWarningDirectiveTrivia
  - PragmaWarningDirectiveTrivia
  - SyntaxFactory.PragmaWarningDirectiveTrivia
  - SyntaxFactory::PragmaWarningDirectiveTrivia
  helpviewer_keywords:
  - SyntaxFactory.PragmaWarningDirectiveTrivia method [.NET]
  - PragmaWarningDirectiveTrivia method [.NET], class SyntaxFactory
  - SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, Boolean) method [.NET]
  - PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean) method [.NET]
  - PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, Boolean) method [.NET]
  - PragmaWarningDirectiveTrivia(SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, Boolean) method [.NET]
  - PragmaWarningDirectiveTrivia(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean) method [.NET]
  - PragmaWarningDirectiveTrivia(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
