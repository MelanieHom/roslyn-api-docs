### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: delegateKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: asteriskToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: callingConvention
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: lessThanToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameters
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax&text=ParameterSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: greaterThanToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  name: FunctionPointerType(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ParameterSyntax>, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ParameterSyntax>, SyntaxToken)
  nameWithType: SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ParameterSyntax>, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType (Microsoft.CodeAnalysis.SyntaxToken delegateKeyword, Microsoft.CodeAnalysis.SyntaxToken asteriskToken, Microsoft.CodeAnalysis.SyntaxToken callingConvention, Microsoft.CodeAnalysis.SyntaxToken lessThanToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> parameters, Microsoft.CodeAnalysis.SyntaxToken greaterThanToken);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType (delegateKeyword As SyntaxToken, asteriskToken As SyntaxToken, callingConvention As SyntaxToken, lessThanToken As SyntaxToken, parameters As SeparatedSyntaxList(Of ParameterSyntax), greaterThanToken As SyntaxToken) As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet-3.7.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: delegateKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: asteriskToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: callingConvention
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax&text=FunctionPointerCallingConventionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax&text=FunctionPointerParameterListSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax)
  name: FunctionPointerType(SyntaxToken, SyntaxToken, FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  nameWithType: SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType (Microsoft.CodeAnalysis.SyntaxToken delegateKeyword, Microsoft.CodeAnalysis.SyntaxToken asteriskToken, Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax? callingConvention, Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax parameterList);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType (delegateKeyword As SyntaxToken, asteriskToken As SyntaxToken, callingConvention As FunctionPointerCallingConventionSyntax, parameterList As FunctionPointerParameterListSyntax) As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: callingConvention
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameters
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax&text=ParameterSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})
  name: FunctionPointerType(SyntaxToken, SeparatedSyntaxList<ParameterSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(SyntaxToken, SeparatedSyntaxList<ParameterSyntax>)
  nameWithType: SyntaxFactory.FunctionPointerType(SyntaxToken, SeparatedSyntaxList<ParameterSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType (Microsoft.CodeAnalysis.SyntaxToken callingConvention, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> parameters);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType (callingConvention As SyntaxToken, parameters As SeparatedSyntaxList(Of ParameterSyntax)) As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet-3.7.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
  name: FunctionPointerType()
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType()
  nameWithType: SyntaxFactory.FunctionPointerType()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType ();
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : unit -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType () As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: parameters
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax&text=ParameterSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})
  name: FunctionPointerType(SeparatedSyntaxList<ParameterSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(SeparatedSyntaxList<ParameterSyntax>)
  nameWithType: SyntaxFactory.FunctionPointerType(SeparatedSyntaxList<ParameterSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType (Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> parameters = default);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType (Optional parameters As SeparatedSyntaxList(Of ParameterSyntax) = Nothing) As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet-3.7.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax&text=FunctionPointerTypeSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: callingConvention
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax&text=FunctionPointerCallingConventionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax&text=FunctionPointerParameterListSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax)
  name: FunctionPointerType(FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType(FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  nameWithType: SyntaxFactory.FunctionPointerType(FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax FunctionPointerType (Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax? callingConvention, Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax parameterList);
  - lang: fsharp
    values:
    - value: 'static member FunctionPointerType : Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerCallingConventionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerParameterListSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.FunctionPointerTypeSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FunctionPointerType (callingConvention As FunctionPointerCallingConventionSyntax, parameterList As FunctionPointerParameterListSyntax) As FunctionPointerTypeSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FunctionPointerTypeSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
namespace: Microsoft.CodeAnalysis.CSharp
name: FunctionPointerType
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
nameWithType: SyntaxFactory.FunctionPointerType
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-3.7.0
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FunctionPointerType
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::FunctionPointerType
  - FunctionPointerType
  - SyntaxFactory.FunctionPointerType
  - SyntaxFactory::FunctionPointerType
  helpviewer_keywords:
  - SyntaxFactory.FunctionPointerType method [.NET]
  - FunctionPointerType method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ParameterSyntax>, SyntaxToken) method [.NET]
  - FunctionPointerType(SyntaxToken, SyntaxToken, SyntaxToken, SyntaxToken, SeparatedSyntaxList<ParameterSyntax>, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType(SyntaxToken, SyntaxToken, FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax) method [.NET]
  - FunctionPointerType(SyntaxToken, SyntaxToken, FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType(SyntaxToken, SeparatedSyntaxList<ParameterSyntax>) method [.NET]
  - FunctionPointerType(SyntaxToken, SeparatedSyntaxList<ParameterSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType() method [.NET]
  - FunctionPointerType() method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType(SeparatedSyntaxList<ParameterSyntax>) method [.NET]
  - FunctionPointerType(SeparatedSyntaxList<ParameterSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.FunctionPointerType(FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax) method [.NET]
  - FunctionPointerType(FunctionPointerCallingConventionSyntax, FunctionPointerParameterListSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
