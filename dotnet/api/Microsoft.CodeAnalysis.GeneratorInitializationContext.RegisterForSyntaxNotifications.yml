### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: receiverCreator
    description: A <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxContextReceiverCreator"></xref> that can be invoked to create an instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver"></xref>
    type: <xref href="Microsoft.CodeAnalysis.SyntaxContextReceiverCreator?alt=Microsoft.CodeAnalysis.SyntaxContextReceiverCreator&text=SyntaxContextReceiverCreator" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(Microsoft.CodeAnalysis.SyntaxContextReceiverCreator)
  commentId: M:Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(Microsoft.CodeAnalysis.SyntaxContextReceiverCreator)
  name: RegisterForSyntaxNotifications(SyntaxContextReceiverCreator)
  fullName: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxContextReceiverCreator)
  nameWithType: GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxContextReceiverCreator)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void RegisterForSyntaxNotifications (Microsoft.CodeAnalysis.SyntaxContextReceiverCreator receiverCreator);
  - lang: fsharp
    values:
    - value: 'member this.RegisterForSyntaxNotifications : Microsoft.CodeAnalysis.SyntaxContextReceiverCreator -> unit'
  - lang: vb
    values:
    - value: Public Sub RegisterForSyntaxNotifications (receiverCreator As SyntaxContextReceiverCreator)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Register a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxContextReceiverCreator"></xref> for this generator, which can be used to create an instance of an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver"></xref>.
  remarks: <p>This method allows generators to be 'syntax aware'. Before each generation the <code data-dev-comment-type="paramref">receiverCreator</code> will be invoked to create an instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver"></xref>. This receiver will have its <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)"></xref> invoked for each syntax node in the compilation, allowing the receiver to build up information about the compilation before generation occurs.</p><p>During <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISourceGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)"></xref> the generator can obtain the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver"></xref> instance that was created by accessing the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.GeneratorExecutionContext.SyntaxContextReceiver"></xref> property. Any information that was collected by the receiver can be used to generate the final output.</p><p>A new instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxContextReceiver"></xref> is created prior to every call to <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISourceGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)"></xref>, meaning there is no need to manage the lifetime of the receiver or its contents.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: receiverCreator
    description: A <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxReceiverCreator"></xref> that can be invoked to create an instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver"></xref>
    type: <xref href="Microsoft.CodeAnalysis.SyntaxReceiverCreator?alt=Microsoft.CodeAnalysis.SyntaxReceiverCreator&text=SyntaxReceiverCreator" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(Microsoft.CodeAnalysis.SyntaxReceiverCreator)
  commentId: M:Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(Microsoft.CodeAnalysis.SyntaxReceiverCreator)
  name: RegisterForSyntaxNotifications(SyntaxReceiverCreator)
  fullName: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxReceiverCreator)
  nameWithType: GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxReceiverCreator)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void RegisterForSyntaxNotifications (Microsoft.CodeAnalysis.SyntaxReceiverCreator receiverCreator);
  - lang: fsharp
    values:
    - value: 'member this.RegisterForSyntaxNotifications : Microsoft.CodeAnalysis.SyntaxReceiverCreator -> unit'
  - lang: vb
    values:
    - value: Public Sub RegisterForSyntaxNotifications (receiverCreator As SyntaxReceiverCreator)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Register a <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.SyntaxReceiverCreator"></xref> for this generator, which can be used to create an instance of an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver"></xref>.
  remarks: <p>This method allows generators to be 'syntax aware'. Before each generation the <code data-dev-comment-type="paramref">receiverCreator</code> will be invoked to create an instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver"></xref>. This receiver will have its <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.SyntaxNode)"></xref> invoked for each syntax node in the compilation, allowing the receiver to build up information about the compilation before generation occurs.</p><p>During <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISourceGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)"></xref> the generator can obtain the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver"></xref> instance that was created by accessing the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.GeneratorExecutionContext.SyntaxReceiver"></xref> property. Any information that was collected by the receiver can be used to generate the final output.</p><p>A new instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISyntaxReceiver"></xref> is created per-generation, meaning there is no need to manage the lifetime of the receiver or its contents.</p>
  metadata: {}
uid: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications*
commentId: Overload:Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications
namespace: Microsoft.CodeAnalysis
name: RegisterForSyntaxNotifications
fullName: Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications
nameWithType: GeneratorInitializationContext.RegisterForSyntaxNotifications
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
- value: Microsoft.CodeAnalysis.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
- roslyn-dotnet-3.8.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.GeneratorInitializationContext.RegisterForSyntaxNotifications
  - Microsoft::CodeAnalysis::GeneratorInitializationContext::RegisterForSyntaxNotifications
  - RegisterForSyntaxNotifications
  - GeneratorInitializationContext.RegisterForSyntaxNotifications
  - GeneratorInitializationContext::RegisterForSyntaxNotifications
  helpviewer_keywords:
  - GeneratorInitializationContext.RegisterForSyntaxNotifications method [.NET]
  - RegisterForSyntaxNotifications method [.NET], struct GeneratorInitializationContext
  - GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxContextReceiverCreator) method [.NET]
  - RegisterForSyntaxNotifications(SyntaxContextReceiverCreator) method [.NET], struct GeneratorInitializationContext
  - GeneratorInitializationContext.RegisterForSyntaxNotifications(SyntaxReceiverCreator) method [.NET]
  - RegisterForSyntaxNotifications(SyntaxReceiverCreator) method [.NET], struct GeneratorInitializationContext
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  - roslyn-dotnet-3.8.0
