### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeArguments
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])
  commentId: M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])
  name: WithTypeArguments(SyntaxNode, SyntaxNode[])
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(SyntaxNode, SyntaxNode[])
  nameWithType: SyntaxGenerator.WithTypeArguments(SyntaxNode, SyntaxNode[])
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         Microsoft::CodeAnalysis::SyntaxNode ^ WithTypeArguments(Microsoft::CodeAnalysis::SyntaxNode ^ expression, ... cli::array <Microsoft::CodeAnalysis::SyntaxNode ^> ^ typeArguments);
  - lang: csharp
    values:
    - value: public Microsoft.CodeAnalysis.SyntaxNode WithTypeArguments (Microsoft.CodeAnalysis.SyntaxNode expression, params Microsoft.CodeAnalysis.SyntaxNode[] typeArguments);
  - lang: fsharp
    values:
    - value: 'member this.WithTypeArguments : Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode[] -> Microsoft.CodeAnalysis.SyntaxNode'
  - lang: vb
    values:
    - value: Public Function WithTypeArguments (expression As SyntaxNode, ParamArray typeArguments As SyntaxNode()) As SyntaxNode
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Converts an expression that ends in a name into an expression that ends in a generic name.

    If the expression already ends in a generic name, the new type arguments are used instead.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeArguments
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  commentId: M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  name: WithTypeArguments(SyntaxNode, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(SyntaxNode, IEnumerable<SyntaxNode>)
  nameWithType: SyntaxGenerator.WithTypeArguments(SyntaxNode, IEnumerable<SyntaxNode>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         abstract Microsoft::CodeAnalysis::SyntaxNode ^ WithTypeArguments(Microsoft::CodeAnalysis::SyntaxNode ^ expression, System::Collections::Generic::IEnumerable<Microsoft::CodeAnalysis::SyntaxNode ^> ^ typeArguments);
  - lang: csharp
    values:
    - value: public abstract Microsoft.CodeAnalysis.SyntaxNode WithTypeArguments (Microsoft.CodeAnalysis.SyntaxNode expression, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> typeArguments);
  - lang: fsharp
    values:
    - value: 'abstract member WithTypeArguments : Microsoft.CodeAnalysis.SyntaxNode * seq<Microsoft.CodeAnalysis.SyntaxNode> -> Microsoft.CodeAnalysis.SyntaxNode'
  - lang: vb
    values:
    - value: Public MustOverride Function WithTypeArguments (expression As SyntaxNode, typeArguments As IEnumerable(Of SyntaxNode)) As SyntaxNode
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Converts an expression that ends in a name into an expression that ends in a generic name.

    If the expression already ends in a generic name, the new type arguments are used instead.
  metadata: {}
uid: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments*
commentId: Overload:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments
namespace: Microsoft.CodeAnalysis.Editing
name: WithTypeArguments
fullName: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments
nameWithType: SyntaxGenerator.WithTypeArguments
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments
  api_location:
  - Microsoft.CodeAnalysis.Workspaces.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments
  - Microsoft::CodeAnalysis::Editing::SyntaxGenerator::WithTypeArguments
  - WithTypeArguments
  - SyntaxGenerator.WithTypeArguments
  - SyntaxGenerator::WithTypeArguments
  helpviewer_keywords:
  - SyntaxGenerator.WithTypeArguments method [.NET]
  - WithTypeArguments method [.NET], class SyntaxGenerator
  - SyntaxGenerator.WithTypeArguments(SyntaxNode, SyntaxNode[]) method [.NET]
  - WithTypeArguments(SyntaxNode, SyntaxNode[]) method [.NET], class SyntaxGenerator
  - SyntaxGenerator.WithTypeArguments(SyntaxNode, IEnumerable<SyntaxNode>) method [.NET]
  - WithTypeArguments(SyntaxNode, IEnumerable<SyntaxNode>) method [.NET], class SyntaxGenerator
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
