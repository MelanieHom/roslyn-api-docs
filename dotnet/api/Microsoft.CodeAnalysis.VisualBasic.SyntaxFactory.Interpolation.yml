### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax&text=InterpolationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    description: >-
      The expression whose formatted value should be embedded in the resultant

      string.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: alignmentClause
    description: Optional. The alignment clause ',alignment' of the embedded expression.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax&text=InterpolationAlignmentClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)
  name: Interpolation(ExpressionSyntax, InterpolationAlignmentClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(ExpressionSyntax, InterpolationAlignmentClauseSyntax)
  nameWithType: SyntaxFactory.Interpolation(ExpressionSyntax, InterpolationAlignmentClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationSyntax ^ Interpolation(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression, Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationAlignmentClauseSyntax ^ alignmentClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax Interpolation (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax alignmentClause);
  - lang: fsharp
    values:
    - value: 'static member Interpolation : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function Interpolation (expression As ExpressionSyntax, alignmentClause As InterpolationAlignmentClauseSyntax) As InterpolationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an interpolation of an expression in an interpolated string

    expression e.g. '{expression[,alignment][:formatString]}'.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax&text=InterpolationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: openBraceToken
    description: The opening curly brace '{' token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    description: >-
      The expression whose formatted value should be embedded in the resultant

      string.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: alignmentClause
    description: Optional. The alignment clause ',alignment' of the embedded expression.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax&text=InterpolationAlignmentClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: formatClause
    description: Optional. The format string clause ':formatString' of the embedded expression.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax&text=InterpolationFormatClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: closeBraceToken
    description: The closing curly brace '}' token of the embedded expression.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: Interpolation(SyntaxToken, ExpressionSyntax, InterpolationAlignmentClauseSyntax, InterpolationFormatClauseSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(SyntaxToken, ExpressionSyntax, InterpolationAlignmentClauseSyntax, InterpolationFormatClauseSyntax, SyntaxToken)
  nameWithType: SyntaxFactory.Interpolation(SyntaxToken, ExpressionSyntax, InterpolationAlignmentClauseSyntax, InterpolationFormatClauseSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationSyntax ^ Interpolation(Microsoft::CodeAnalysis::SyntaxToken openBraceToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression, Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationAlignmentClauseSyntax ^ alignmentClause, Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationFormatClauseSyntax ^ formatClause, Microsoft::CodeAnalysis::SyntaxToken closeBraceToken);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax Interpolation (Microsoft.CodeAnalysis.SyntaxToken openBraceToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax alignmentClause, Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax formatClause, Microsoft.CodeAnalysis.SyntaxToken closeBraceToken);
  - lang: fsharp
    values:
    - value: 'static member Interpolation : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function Interpolation (openBraceToken As SyntaxToken, expression As ExpressionSyntax, alignmentClause As InterpolationAlignmentClauseSyntax, formatClause As InterpolationFormatClauseSyntax, closeBraceToken As SyntaxToken) As InterpolationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an interpolation of an expression in an interpolated string

    expression e.g. '{expression[,alignment][:formatString]}'.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax&text=InterpolationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    description: >-
      The expression whose formatted value should be embedded in the resultant

      string.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  name: Interpolation(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(ExpressionSyntax)
  nameWithType: SyntaxFactory.Interpolation(ExpressionSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::InterpolationSyntax ^ Interpolation(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax Interpolation (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression);
  - lang: fsharp
    values:
    - value: 'static member Interpolation : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function Interpolation (expression As ExpressionSyntax) As InterpolationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an interpolation of an expression in an interpolated string

    expression e.g. '{expression[,alignment][:formatString]}'.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation
namespace: Microsoft.CodeAnalysis.VisualBasic
name: Interpolation
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation
nameWithType: SyntaxFactory.Interpolation
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::Interpolation
  - Interpolation
  - SyntaxFactory.Interpolation
  - SyntaxFactory::Interpolation
  helpviewer_keywords:
  - SyntaxFactory.Interpolation method [.NET]
  - Interpolation method [.NET], class SyntaxFactory
  - SyntaxFactory.Interpolation(ExpressionSyntax, InterpolationAlignmentClauseSyntax) method [.NET]
  - Interpolation(ExpressionSyntax, InterpolationAlignmentClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.Interpolation(SyntaxToken, ExpressionSyntax, InterpolationAlignmentClauseSyntax, InterpolationFormatClauseSyntax, SyntaxToken) method [.NET]
  - Interpolation(SyntaxToken, ExpressionSyntax, InterpolationAlignmentClauseSyntax, InterpolationFormatClauseSyntax, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.Interpolation(ExpressionSyntax) method [.NET]
  - Interpolation(ExpressionSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
