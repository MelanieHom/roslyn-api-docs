### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax&text=CatchStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: identifierName
    description: >-
      An identifier declaring a new variable or naming an existing variable to store

      the exception caught by the "Catch" statement.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax&text=IdentifierNameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: asClause
    description: A simple "As" clause specifying the type of exception to catch.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: whenClause
    description: A "When" clause to filter exceptions before catching.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax&text=CatchFilterClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)
  name: CatchStatement(IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  nameWithType: SyntaxFactory.CatchStatement(IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::CatchStatementSyntax ^ CatchStatement(Microsoft::CodeAnalysis::VisualBasic::Syntax::IdentifierNameSyntax ^ identifierName, Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ asClause, Microsoft::CodeAnalysis::VisualBasic::Syntax::CatchFilterClauseSyntax ^ whenClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax CatchStatement (Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax identifierName, Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax asClause, Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax whenClause);
  - lang: fsharp
    values:
    - value: 'static member CatchStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function CatchStatement (identifierName As IdentifierNameSyntax, asClause As SimpleAsClauseSyntax, whenClause As CatchFilterClauseSyntax) As CatchStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents the "Catch ... When ..." statement that begins a "Catch" block.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax&text=CatchStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: catchKeyword
    description: The "Catch" keyword.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifierName
    description: >-
      An identifier declaring a new variable or naming an existing variable to store

      the exception caught by the "Catch" statement.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax&text=IdentifierNameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: asClause
    description: A simple "As" clause specifying the type of exception to catch.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: whenClause
    description: A "When" clause to filter exceptions before catching.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax&text=CatchFilterClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)
  name: CatchStatement(SyntaxToken, IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(SyntaxToken, IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  nameWithType: SyntaxFactory.CatchStatement(SyntaxToken, IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::CatchStatementSyntax ^ CatchStatement(Microsoft::CodeAnalysis::SyntaxToken catchKeyword, Microsoft::CodeAnalysis::VisualBasic::Syntax::IdentifierNameSyntax ^ identifierName, Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ asClause, Microsoft::CodeAnalysis::VisualBasic::Syntax::CatchFilterClauseSyntax ^ whenClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax CatchStatement (Microsoft.CodeAnalysis.SyntaxToken catchKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax identifierName, Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax asClause, Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax whenClause);
  - lang: fsharp
    values:
    - value: 'static member CatchStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function CatchStatement (catchKeyword As SyntaxToken, identifierName As IdentifierNameSyntax, asClause As SimpleAsClauseSyntax, whenClause As CatchFilterClauseSyntax) As CatchStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents the "Catch ... When ..." statement that begins a "Catch" block.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax&text=CatchStatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
  name: CatchStatement()
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement()
  nameWithType: SyntaxFactory.CatchStatement()
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::CatchStatementSyntax ^ CatchStatement();
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax CatchStatement ();
  - lang: fsharp
    values:
    - value: 'static member CatchStatement : unit -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function CatchStatement () As CatchStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents the "Catch ... When ..." statement that begins a "Catch" block.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
namespace: Microsoft.CodeAnalysis.VisualBasic
name: CatchStatement
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
nameWithType: SyntaxFactory.CatchStatement
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::CatchStatement
  - CatchStatement
  - SyntaxFactory.CatchStatement
  - SyntaxFactory::CatchStatement
  helpviewer_keywords:
  - SyntaxFactory.CatchStatement method [.NET]
  - CatchStatement method [.NET], class SyntaxFactory
  - SyntaxFactory.CatchStatement(IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax) method [.NET]
  - CatchStatement(IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.CatchStatement(SyntaxToken, IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax) method [.NET]
  - CatchStatement(SyntaxToken, IdentifierNameSyntax, SimpleAsClauseSyntax, CatchFilterClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.CatchStatement() method [.NET]
  - CatchStatement() method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
