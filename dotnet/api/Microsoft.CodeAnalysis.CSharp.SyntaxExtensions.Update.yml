### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax&text=IndexerDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: syntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax&text=IndexerDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: type
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: explicitInterfaceSpecifier
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax&text=ExplicitInterfaceSpecifierSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: thisKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax&text=BracketedParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: accessorList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax&text=AccessorListSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
  name: Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax)
  nameWithType: SyntaxExtensions.Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static Microsoft::CodeAnalysis::CSharp::Syntax::IndexerDeclarationSyntax ^ Update(Microsoft::CodeAnalysis::CSharp::Syntax::IndexerDeclarationSyntax ^ syntax, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::SyntaxTokenList modifiers, Microsoft::CodeAnalysis::CSharp::Syntax::TypeSyntax ^ type, Microsoft::CodeAnalysis::CSharp::Syntax::ExplicitInterfaceSpecifierSyntax ^ explicitInterfaceSpecifier, Microsoft::CodeAnalysis::SyntaxToken thisKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::BracketedParameterListSyntax ^ parameterList, Microsoft::CodeAnalysis::CSharp::Syntax::AccessorListSyntax ^ accessorList);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax Update (this Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax syntax, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax type, Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax explicitInterfaceSpecifier, Microsoft.CodeAnalysis.SyntaxToken thisKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax accessorList);
  - lang: fsharp
    values:
    - value: 'static member Update : Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function Update (syntax As IndexerDeclarationSyntax, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, type As TypeSyntax, explicitInterfaceSpecifier As ExplicitInterfaceSpecifierSyntax, thisKeyword As SyntaxToken, parameterList As BracketedParameterListSyntax, accessorList As AccessorListSyntax) As IndexerDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax&text=OperatorDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: syntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax&text=OperatorDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: returnType
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: operatorKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: operatorToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken)
  nameWithType: SyntaxExtensions.Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static Microsoft::CodeAnalysis::CSharp::Syntax::OperatorDeclarationSyntax ^ Update(Microsoft::CodeAnalysis::CSharp::Syntax::OperatorDeclarationSyntax ^ syntax, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::SyntaxTokenList modifiers, Microsoft::CodeAnalysis::CSharp::Syntax::TypeSyntax ^ returnType, Microsoft::CodeAnalysis::SyntaxToken operatorKeyword, Microsoft::CodeAnalysis::SyntaxToken operatorToken, Microsoft::CodeAnalysis::CSharp::Syntax::ParameterListSyntax ^ parameterList, Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block, Microsoft::CodeAnalysis::SyntaxToken semicolonToken);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax Update (this Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax syntax, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax returnType, Microsoft.CodeAnalysis.SyntaxToken operatorKeyword, Microsoft.CodeAnalysis.SyntaxToken operatorToken, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
  - lang: fsharp
    values:
    - value: 'static member Update : Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function Update (syntax As OperatorDeclarationSyntax, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, returnType As TypeSyntax, operatorKeyword As SyntaxToken, operatorToken As SyntaxToken, parameterList As ParameterListSyntax, block As BlockSyntax, semicolonToken As SyntaxToken) As OperatorDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax&text=MethodDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: syntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax&text=MethodDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: returnType
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: explicitInterfaceSpecifier
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax&text=ExplicitInterfaceSpecifierSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax&text=TypeParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: constraintClauses
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&text=TypeParameterConstraintClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: block
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax&text=BlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken)
  nameWithType: SyntaxExtensions.Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:

        [System::Runtime::CompilerServices::Extension]
         static Microsoft::CodeAnalysis::CSharp::Syntax::MethodDeclarationSyntax ^ Update(Microsoft::CodeAnalysis::CSharp::Syntax::MethodDeclarationSyntax ^ syntax, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::SyntaxTokenList modifiers, Microsoft::CodeAnalysis::CSharp::Syntax::TypeSyntax ^ returnType, Microsoft::CodeAnalysis::CSharp::Syntax::ExplicitInterfaceSpecifierSyntax ^ explicitInterfaceSpecifier, Microsoft::CodeAnalysis::SyntaxToken identifier, Microsoft::CodeAnalysis::CSharp::Syntax::TypeParameterListSyntax ^ typeParameterList, Microsoft::CodeAnalysis::CSharp::Syntax::ParameterListSyntax ^ parameterList, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::CSharp::Syntax::TypeParameterConstraintClauseSyntax ^> constraintClauses, Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block, Microsoft::CodeAnalysis::SyntaxToken semicolonToken);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax Update (this Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax syntax, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax returnType, Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax explicitInterfaceSpecifier, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax parameterList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
  - lang: fsharp
    values:
    - value: 'static member Update : Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function Update (syntax As MethodDeclarationSyntax, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, returnType As TypeSyntax, explicitInterfaceSpecifier As ExplicitInterfaceSpecifierSyntax, identifier As SyntaxToken, typeParameterList As TypeParameterListSyntax, parameterList As ParameterListSyntax, constraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax), block As BlockSyntax, semicolonToken As SyntaxToken) As MethodDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update
namespace: Microsoft.CodeAnalysis.CSharp
name: Update
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update
nameWithType: SyntaxExtensions.Update
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update
  - Microsoft::CodeAnalysis::CSharp::SyntaxExtensions::Update
  - Update
  - SyntaxExtensions.Update
  - SyntaxExtensions::Update
  helpviewer_keywords:
  - SyntaxExtensions.Update method [.NET]
  - Update method [.NET], class SyntaxExtensions
  - SyntaxExtensions.Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax) extension method [.NET]
  - Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax) extension method [.NET], class SyntaxExtensions
  - SyntaxExtensions.Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken) extension method [.NET]
  - Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken) extension method [.NET], class SyntaxExtensions
  - SyntaxExtensions.Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken) extension method [.NET]
  - Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken) extension method [.NET], class SyntaxExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
