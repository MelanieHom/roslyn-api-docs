### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax&text=DoLoopBlockSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: doStatement
    description: The Do statement that begins the block.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax&text=DoStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: loopStatement
    description: The Loop statement that ends the block.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax&text=LoopStatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)
  name: SimpleDoLoopBlock(DoStatementSyntax, LoopStatementSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, LoopStatementSyntax)
  nameWithType: SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, LoopStatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::DoLoopBlockSyntax ^ SimpleDoLoopBlock(Microsoft::CodeAnalysis::VisualBasic::Syntax::DoStatementSyntax ^ doStatement, Microsoft::CodeAnalysis::VisualBasic::Syntax::LoopStatementSyntax ^ loopStatement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax SimpleDoLoopBlock (Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax doStatement, Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax loopStatement);
  - lang: fsharp
    values:
    - value: 'static member SimpleDoLoopBlock : Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax'
  - lang: vb
    values:
    - value: Public Shared Function SimpleDoLoopBlock (doStatement As DoStatementSyntax, loopStatement As LoopStatementSyntax) As DoLoopBlockSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents a Do-Loop block. The Kind property can be used to determine if this

    is a Do While, Do Until, Do Loop While, Do Loop Until, or infinite Do Loop.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax&text=DoLoopBlockSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: doStatement
    description: The Do statement that begins the block.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax&text=DoStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statements
    description: The statements contained in the block statement. This might be an empty list.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: loopStatement
    description: The Loop statement that ends the block.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax&text=LoopStatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)
  name: SimpleDoLoopBlock(DoStatementSyntax, SyntaxList<StatementSyntax>, LoopStatementSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, SyntaxList<StatementSyntax>, LoopStatementSyntax)
  nameWithType: SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, SyntaxList<StatementSyntax>, LoopStatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::DoLoopBlockSyntax ^ SimpleDoLoopBlock(Microsoft::CodeAnalysis::VisualBasic::Syntax::DoStatementSyntax ^ doStatement, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::StatementSyntax ^> statements, Microsoft::CodeAnalysis::VisualBasic::Syntax::LoopStatementSyntax ^ loopStatement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax SimpleDoLoopBlock (Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax doStatement, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax> statements, Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax loopStatement);
  - lang: fsharp
    values:
    - value: 'static member SimpleDoLoopBlock : Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax> * Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax'
  - lang: vb
    values:
    - value: Public Shared Function SimpleDoLoopBlock (doStatement As DoStatementSyntax, statements As SyntaxList(Of StatementSyntax), loopStatement As LoopStatementSyntax) As DoLoopBlockSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents a Do-Loop block. The Kind property can be used to determine if this

    is a Do While, Do Until, Do Loop While, Do Loop Until, or infinite Do Loop.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock
namespace: Microsoft.CodeAnalysis.VisualBasic
name: SimpleDoLoopBlock
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock
nameWithType: SyntaxFactory.SimpleDoLoopBlock
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::SimpleDoLoopBlock
  - SimpleDoLoopBlock
  - SyntaxFactory.SimpleDoLoopBlock
  - SyntaxFactory::SimpleDoLoopBlock
  helpviewer_keywords:
  - SyntaxFactory.SimpleDoLoopBlock method [.NET]
  - SimpleDoLoopBlock method [.NET], class SyntaxFactory
  - SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, LoopStatementSyntax) method [.NET]
  - SimpleDoLoopBlock(DoStatementSyntax, LoopStatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.SimpleDoLoopBlock(DoStatementSyntax, SyntaxList<StatementSyntax>, LoopStatementSyntax) method [.NET]
  - SimpleDoLoopBlock(DoStatementSyntax, SyntaxList<StatementSyntax>, LoopStatementSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
