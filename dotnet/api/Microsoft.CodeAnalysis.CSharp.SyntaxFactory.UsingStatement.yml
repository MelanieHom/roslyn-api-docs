### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: awaitKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: usingKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: closeParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxToken awaitKeyword, Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxToken awaitKeyword, Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? expression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (awaitKeyword As SyntaxToken, usingKeyword As SyntaxToken, openParenToken As SyntaxToken, declaration As VariableDeclarationSyntax, expression As ExpressionSyntax, closeParenToken As SyntaxToken, statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: usingKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: closeParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingStatementSyntax ^ UsingStatement(Microsoft::CodeAnalysis::SyntaxToken usingKeyword, Microsoft::CodeAnalysis::SyntaxToken openParenToken, Microsoft::CodeAnalysis::CSharp::Syntax::VariableDeclarationSyntax ^ declaration, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ expression, Microsoft::CodeAnalysis::SyntaxToken closeParenToken, Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? expression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (usingKeyword As SyntaxToken, openParenToken As SyntaxToken, declaration As VariableDeclarationSyntax, expression As ExpressionSyntax, closeParenToken As SyntaxToken, statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: awaitKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: usingKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: closeParenToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxToken awaitKeyword, Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? expression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (attributeLists As SyntaxList(Of AttributeListSyntax), awaitKeyword As SyntaxToken, usingKeyword As SyntaxToken, openParenToken As SyntaxToken, declaration As VariableDeclarationSyntax, expression As ExpressionSyntax, closeParenToken As SyntaxToken, statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingStatementSyntax ^ UsingStatement(Microsoft::CodeAnalysis::CSharp::Syntax::VariableDeclarationSyntax ^ declaration, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ expression, Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? expression, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (declaration As VariableDeclarationSyntax, expression As ExpressionSyntax, statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(StatementSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingStatementSyntax ^ UsingStatement(Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^ statement);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax&text=UsingStatementSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: declaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax&text=VariableDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: statement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax&text=StatementSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  name: UsingStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  nameWithType: SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax UsingStatement (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax? declaration, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax? expression, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax statement);
  - lang: fsharp
    values:
    - value: 'static member UsingStatement : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingStatement (attributeLists As SyntaxList(Of AttributeListSyntax), declaration As VariableDeclarationSyntax, expression As ExpressionSyntax, statement As StatementSyntax) As UsingStatementSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingStatementSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement
namespace: Microsoft.CodeAnalysis.CSharp
name: UsingStatement
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement
nameWithType: SyntaxFactory.UsingStatement
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
- cpp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::UsingStatement
  - UsingStatement
  - SyntaxFactory.UsingStatement
  - SyntaxFactory::UsingStatement
  helpviewer_keywords:
  - SyntaxFactory.UsingStatement method [.NET]
  - UsingStatement method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET]
  - UsingStatement(SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET]
  - UsingStatement(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET]
  - UsingStatement(SyntaxList<AttributeListSyntax>, SyntaxToken, SyntaxToken, SyntaxToken, VariableDeclarationSyntax, ExpressionSyntax, SyntaxToken, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax) method [.NET]
  - UsingStatement(VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(StatementSyntax) method [.NET]
  - UsingStatement(StatementSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax) method [.NET]
  - UsingStatement(SyntaxList<AttributeListSyntax>, VariableDeclarationSyntax, ExpressionSyntax, StatementSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
