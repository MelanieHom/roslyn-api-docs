### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.LineMapping?alt=Microsoft.CodeAnalysis.LineMapping&text=LineMapping" data-throw-if-not-resolved="True"/>&gt;
    description: >-
      Empty sequence if the tree does not contain a line mapping directive.

      Otherwise a non-empty sequence of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.LineMapping"></xref>.
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings(System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings(System.Threading.CancellationToken)
  name: GetLineMappings(CancellationToken)
  fullName: Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings(CancellationToken)
  nameWithType: SyntaxTree.GetLineMappings(CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.LineMapping> GetLineMappings (System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member GetLineMappings : System.Threading.CancellationToken -> seq<Microsoft.CodeAnalysis.LineMapping>'
  - lang: vb
    values:
    - value: Public MustOverride Function GetLineMappings (Optional cancellationToken As CancellationToken = Nothing) As IEnumerable(Of LineMapping)
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns empty sequence if there are no line mapping directives in the tree.

    Otherwise, returns a sequence of pairs of spans: each describing a mapping of a span of the tree between two consecutive #line directives.

    If the first directive is not on the first line the first pair describes mapping of the span preceding the first directive.

    The last pair of the sequence describes mapping of the span following the last #line directive.
  metadata: {}
uid: Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings*
commentId: Overload:Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings
namespace: Microsoft.CodeAnalysis
name: GetLineMappings
fullName: Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings
nameWithType: SyntaxTree.GetLineMappings
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.SyntaxTree.GetLineMappings
  - Microsoft::CodeAnalysis::SyntaxTree::GetLineMappings
  - GetLineMappings
  - SyntaxTree.GetLineMappings
  - SyntaxTree::GetLineMappings
  helpviewer_keywords:
  - SyntaxTree.GetLineMappings method [.NET]
  - GetLineMappings method [.NET], class SyntaxTree
  - SyntaxTree.GetLineMappings(CancellationToken) method [.NET]
  - GetLineMappings(CancellationToken) method [.NET], class SyntaxTree
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
