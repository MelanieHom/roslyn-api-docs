### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax&text=LineSpanDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: start
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: end
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: file
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax LineSpanDirectiveTrivia (Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax start, Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax end, Microsoft.CodeAnalysis.SyntaxToken file, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member LineSpanDirectiveTrivia : Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LineSpanDirectiveTrivia (start As LineDirectivePositionSyntax, end As LineDirectivePositionSyntax, file As SyntaxToken, isActive As Boolean) As LineSpanDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new LineSpanDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax&text=LineSpanDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: start
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: end
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: characterOffset
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: file
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax LineSpanDirectiveTrivia (Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax start, Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax end, Microsoft.CodeAnalysis.SyntaxToken characterOffset, Microsoft.CodeAnalysis.SyntaxToken file, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member LineSpanDirectiveTrivia : Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LineSpanDirectiveTrivia (start As LineDirectivePositionSyntax, end As LineDirectivePositionSyntax, characterOffset As SyntaxToken, file As SyntaxToken, isActive As Boolean) As LineSpanDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new LineSpanDirectiveTriviaSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax&text=LineSpanDirectiveTriviaSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: hashToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: lineKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: start
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: minusToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: end
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax&text=LineDirectivePositionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: characterOffset
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: file
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: endOfDirectiveToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isActive
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  name: LineSpanDirectiveTrivia(SyntaxToken, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia(SyntaxToken, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  nameWithType: SyntaxFactory.LineSpanDirectiveTrivia(SyntaxToken, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, SyntaxToken, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax LineSpanDirectiveTrivia (Microsoft.CodeAnalysis.SyntaxToken hashToken, Microsoft.CodeAnalysis.SyntaxToken lineKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax start, Microsoft.CodeAnalysis.SyntaxToken minusToken, Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax end, Microsoft.CodeAnalysis.SyntaxToken characterOffset, Microsoft.CodeAnalysis.SyntaxToken file, Microsoft.CodeAnalysis.SyntaxToken endOfDirectiveToken, bool isActive);
  - lang: fsharp
    values:
    - value: 'static member LineSpanDirectiveTrivia : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectivePositionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * bool -> Microsoft.CodeAnalysis.CSharp.Syntax.LineSpanDirectiveTriviaSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LineSpanDirectiveTrivia (hashToken As SyntaxToken, lineKeyword As SyntaxToken, start As LineDirectivePositionSyntax, minusToken As SyntaxToken, end As LineDirectivePositionSyntax, characterOffset As SyntaxToken, file As SyntaxToken, endOfDirectiveToken As SyntaxToken, isActive As Boolean) As LineSpanDirectiveTriviaSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new LineSpanDirectiveTriviaSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia
namespace: Microsoft.CodeAnalysis.CSharp
name: LineSpanDirectiveTrivia
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia
nameWithType: SyntaxFactory.LineSpanDirectiveTrivia
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineSpanDirectiveTrivia
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::LineSpanDirectiveTrivia
  - LineSpanDirectiveTrivia
  - SyntaxFactory.LineSpanDirectiveTrivia
  - SyntaxFactory::LineSpanDirectiveTrivia
  helpviewer_keywords:
  - SyntaxFactory.LineSpanDirectiveTrivia method [.NET]
  - LineSpanDirectiveTrivia method [.NET], class SyntaxFactory
  - SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, Boolean) method [.NET]
  - LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, Boolean) method [.NET]
  - LineSpanDirectiveTrivia(LineDirectivePositionSyntax, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  - SyntaxFactory.LineSpanDirectiveTrivia(SyntaxToken, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, SyntaxToken, Boolean) method [.NET]
  - LineSpanDirectiveTrivia(SyntaxToken, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, LineDirectivePositionSyntax, SyntaxToken, SyntaxToken, SyntaxToken, Boolean) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
