### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: property
  uid: Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  commentId: P:Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  name: HandlerAppendCallsReturnBool
  fullName: Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  nameWithType: IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool HandlerAppendCallsReturnBool { get; }
  - lang: fsharp
    values:
    - value: 'member this.HandlerAppendCallsReturnBool : bool'
  - lang: vb
    values:
    - value: Public ReadOnly Property HandlerAppendCallsReturnBool As Boolean
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    True if the AppendLiteral or AppendFormatted calls in nested <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation.Parts"></xref> return <code data-dev-comment-type="langword">bool</code>. When that is true, each part

    will be conditional on the return of the part before it, only being executed when the Append call returns true. False otherwise.
  remarks: <p>when this is true and <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerCreationHasSuccessParameter"></xref> is true, then the first part in nested <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation.Parts"></xref> is conditionally run. If this is true and <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerCreationHasSuccessParameter"></xref> is false, then the first part is unconditionally run. <br /> Just because this is true or false does not guarantee that all Append calls actually do return boolean values, as there could be dynamic calls or errors. It only governs what the compiler was expecting, based on the first calls it did see.</p>
  metadata: {}
uid: Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool*
commentId: Overload:Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
namespace: Microsoft.CodeAnalysis.Operations
name: HandlerAppendCallsReturnBool
fullName: Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
nameWithType: IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  - Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.get_HandlerAppendCallsReturnBool
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Operations.IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  - Microsoft::CodeAnalysis::Operations::IInterpolatedStringHandlerCreationOperation::HandlerAppendCallsReturnBool
  - HandlerAppendCallsReturnBool
  - IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool
  - IInterpolatedStringHandlerCreationOperation::HandlerAppendCallsReturnBool
  helpviewer_keywords:
  - IInterpolatedStringHandlerCreationOperation.HandlerAppendCallsReturnBool property [.NET]
  - HandlerAppendCallsReturnBool property [.NET], interface IInterpolatedStringHandlerCreationOperation
  monikers:
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
