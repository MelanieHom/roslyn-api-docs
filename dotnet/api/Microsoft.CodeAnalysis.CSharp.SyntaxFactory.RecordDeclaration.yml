### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax&text=TypeParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: baseList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax&text=BaseListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: constraintClauses
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&text=TypeParameterConstraintClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  name: RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax? typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax? parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax? baseList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.CSharp.SyntaxKind * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (kind As SyntaxKind, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, keyword As SyntaxToken, identifier As SyntaxToken, typeParameterList As TypeParameterListSyntax, parameterList As ParameterListSyntax, baseList As BaseListSyntax, constraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax), members As SyntaxList(Of MemberDeclarationSyntax)) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: classOrStructKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax&text=TypeParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: baseList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax&text=BaseListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: constraintClauses
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&text=TypeParameterConstraintClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: openBraceToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: closeBraceToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  name: RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken classOrStructKeyword, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax? typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax? parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax? baseList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.SyntaxToken openBraceToken, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members, Microsoft.CodeAnalysis.SyntaxToken closeBraceToken, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.CSharp.SyntaxKind * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (kind As SyntaxKind, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, keyword As SyntaxToken, classOrStructKeyword As SyntaxToken, identifier As SyntaxToken, typeParameterList As TypeParameterListSyntax, parameterList As ParameterListSyntax, baseList As BaseListSyntax, constraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax), openBraceToken As SyntaxToken, members As SyntaxList(Of MemberDeclarationSyntax), closeBraceToken As SyntaxToken, semicolonToken As SyntaxToken) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax&text=TypeParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: baseList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax&text=BaseListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: constraintClauses
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&text=TypeParameterConstraintClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: openBraceToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: closeBraceToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  name: RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax? typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax? parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax? baseList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.SyntaxToken openBraceToken, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members, Microsoft.CodeAnalysis.SyntaxToken closeBraceToken, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, keyword As SyntaxToken, identifier As SyntaxToken, typeParameterList As TypeParameterListSyntax, parameterList As ParameterListSyntax, baseList As BaseListSyntax, constraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax), openBraceToken As SyntaxToken, members As SyntaxList(Of MemberDeclarationSyntax), closeBraceToken As SyntaxToken, semicolonToken As SyntaxToken) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax&text=TypeParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: baseList
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax&text=BaseListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: constraintClauses
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&text=TypeParameterConstraintClauseSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  name: RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax? typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax? parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax? baseList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax typeParameterList, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax parameterList, Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax baseList, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> constraintClauses, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members);
      monikers:
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, keyword As SyntaxToken, identifier As SyntaxToken, typeParameterList As TypeParameterListSyntax, parameterList As ParameterListSyntax, baseList As BaseListSyntax, constraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax), members As SyntaxList(Of MemberDeclarationSyntax)) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  name: RecordDeclaration(SyntaxToken, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxToken, SyntaxToken)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxToken, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (keyword As SyntaxToken, identifier As SyntaxToken) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)
  name: RecordDeclaration(SyntaxKind, SyntaxToken, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, SyntaxToken)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken identifier);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.CSharp.SyntaxKind * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (kind As SyntaxKind, keyword As SyntaxToken, identifier As SyntaxToken) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxToken,System.String)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.SyntaxToken,System.String)
  name: RecordDeclaration(SyntaxToken, String)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxToken, String)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxToken, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.SyntaxToken keyword, string identifier);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.SyntaxToken * string -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (keyword As SyntaxToken, identifier As String) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax&text=RecordDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    type: <xref href="Microsoft.CodeAnalysis.CSharp.SyntaxKind?alt=Microsoft.CodeAnalysis.CSharp.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,System.String)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,System.String)
  name: RecordDeclaration(SyntaxKind, SyntaxToken, String)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, String)
  nameWithType: SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax RecordDeclaration (Microsoft.CodeAnalysis.CSharp.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxToken keyword, string identifier);
  - lang: fsharp
    values:
    - value: 'static member RecordDeclaration : Microsoft.CodeAnalysis.CSharp.SyntaxKind * Microsoft.CodeAnalysis.SyntaxToken * string -> Microsoft.CodeAnalysis.CSharp.Syntax.RecordDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function RecordDeclaration (kind As SyntaxKind, keyword As SyntaxToken, identifier As String) As RecordDeclarationSyntax
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new RecordDeclarationSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration
namespace: Microsoft.CodeAnalysis.CSharp
name: RecordDeclaration
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration
nameWithType: SyntaxFactory.RecordDeclaration
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-3.11.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RecordDeclaration
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::RecordDeclaration
  - RecordDeclaration
  - SyntaxFactory.RecordDeclaration
  - SyntaxFactory::RecordDeclaration
  helpviewer_keywords:
  - SyntaxFactory.RecordDeclaration method [.NET]
  - RecordDeclaration method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET]
  - RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken) method [.NET]
  - RecordDeclaration(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken) method [.NET]
  - RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxToken, SyntaxList<MemberDeclarationSyntax>, SyntaxToken, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET]
  - RecordDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, BaseListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxToken, SyntaxToken) method [.NET]
  - RecordDeclaration(SyntaxToken, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, SyntaxToken) method [.NET]
  - RecordDeclaration(SyntaxKind, SyntaxToken, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxToken, String) method [.NET]
  - RecordDeclaration(SyntaxToken, String) method [.NET], class SyntaxFactory
  - SyntaxFactory.RecordDeclaration(SyntaxKind, SyntaxToken, String) method [.NET]
  - RecordDeclaration(SyntaxKind, SyntaxToken, String) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
