### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax&text=WithExpressionSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializer
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax&text=InitializerExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  name: WithExpression(ExpressionSyntax, InitializerExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(ExpressionSyntax, InitializerExpressionSyntax)
  nameWithType: SyntaxFactory.WithExpression(ExpressionSyntax, InitializerExpressionSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax WithExpression (Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax initializer);
  - lang: fsharp
    values:
    - value: 'static member WithExpression : Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax'
  - lang: vb
    values:
    - value: Public Shared Function WithExpression (expression As ExpressionSyntax, initializer As InitializerExpressionSyntax) As WithExpressionSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new WithExpressionSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax&text=WithExpressionSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: withKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: initializer
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax&text=InitializerExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  name: WithExpression(ExpressionSyntax, SyntaxToken, InitializerExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression(ExpressionSyntax, SyntaxToken, InitializerExpressionSyntax)
  nameWithType: SyntaxFactory.WithExpression(ExpressionSyntax, SyntaxToken, InitializerExpressionSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax WithExpression (Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.SyntaxToken withKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax initializer);
  - lang: fsharp
    values:
    - value: 'static member WithExpression : Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.WithExpressionSyntax'
  - lang: vb
    values:
    - value: Public Shared Function WithExpression (expression As ExpressionSyntax, withKeyword As SyntaxToken, initializer As InitializerExpressionSyntax) As WithExpressionSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new WithExpressionSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression
namespace: Microsoft.CodeAnalysis.CSharp
name: WithExpression
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression
nameWithType: SyntaxFactory.WithExpression
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WithExpression
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::WithExpression
  - WithExpression
  - SyntaxFactory.WithExpression
  - SyntaxFactory::WithExpression
  helpviewer_keywords:
  - SyntaxFactory.WithExpression method [.NET]
  - WithExpression method [.NET], class SyntaxFactory
  - SyntaxFactory.WithExpression(ExpressionSyntax, InitializerExpressionSyntax) method [.NET]
  - WithExpression(ExpressionSyntax, InitializerExpressionSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.WithExpression(ExpressionSyntax, SyntaxToken, InitializerExpressionSyntax) method [.NET]
  - WithExpression(ExpressionSyntax, SyntaxToken, InitializerExpressionSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
