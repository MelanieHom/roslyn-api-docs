### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
      monikers:
      - roslyn-dotnet
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  parameters:
  - namesWithMoniker:
    - value: expression
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: whenNotNull
    type: <xref href="Microsoft.CodeAnalysis.SyntaxNode?alt=Microsoft.CodeAnalysis.SyntaxNode&text=SyntaxNode" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  commentId: M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  name: ConditionalAccessExpression(SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression(SyntaxNode, SyntaxNode)
  nameWithType: SyntaxGenerator.ConditionalAccessExpression(SyntaxNode, SyntaxNode)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract Microsoft.CodeAnalysis.SyntaxNode ConditionalAccessExpression (Microsoft.CodeAnalysis.SyntaxNode expression, Microsoft.CodeAnalysis.SyntaxNode whenNotNull);
  - lang: fsharp
    values:
    - value: 'abstract member ConditionalAccessExpression : Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -> Microsoft.CodeAnalysis.SyntaxNode'
  - lang: vb
    values:
    - value: Public MustOverride Function ConditionalAccessExpression (expression As SyntaxNode, whenNotNull As SyntaxNode) As SyntaxNode
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates an expression that denotes a conditional access operation. Use <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MemberBindingExpression(Microsoft.CodeAnalysis.SyntaxNode)"></xref> and <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ElementBindingExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})"></xref> to generate the <code data-dev-comment-type="paramref">whenNotNull</code> argument.
  metadata: {}
uid: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression*
commentId: Overload:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression
namespace: Microsoft.CodeAnalysis.Editing
name: ConditionalAccessExpression
fullName: Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression
nameWithType: SyntaxGenerator.ConditionalAccessExpression
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Workspaces.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression
  api_location:
  - Microsoft.CodeAnalysis.Workspaces.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalAccessExpression
  - Microsoft::CodeAnalysis::Editing::SyntaxGenerator::ConditionalAccessExpression
  - ConditionalAccessExpression
  - SyntaxGenerator.ConditionalAccessExpression
  - SyntaxGenerator::ConditionalAccessExpression
  helpviewer_keywords:
  - SyntaxGenerator.ConditionalAccessExpression method [.NET]
  - ConditionalAccessExpression method [.NET], class SyntaxGenerator
  - SyntaxGenerator.ConditionalAccessExpression(SyntaxNode, SyntaxNode) method [.NET]
  - ConditionalAccessExpression(SyntaxNode, SyntaxNode) method [.NET], class SyntaxGenerator
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
