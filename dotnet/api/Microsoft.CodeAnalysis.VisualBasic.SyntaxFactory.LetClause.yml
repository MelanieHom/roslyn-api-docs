### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax&text=LetClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: variables
    description: The list of expression range variable being defined by the Let operator.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&text=ExpressionRangeVariableSyntax" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])
  name: LetClause(ExpressionRangeVariableSyntax[])
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(ExpressionRangeVariableSyntax[])
  nameWithType: SyntaxFactory.LetClause(ExpressionRangeVariableSyntax[])
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::LetClauseSyntax ^ LetClause(... cli::array <Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^> ^ variables);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax LetClause (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] variables);
  - lang: fsharp
    values:
    - value: 'static member LetClause : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LetClause (ParamArray variables As ExpressionRangeVariableSyntax()) As LetClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents a "Let" query operator.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax&text=LetClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: variables
    description: The list of expression range variable being defined by the Let operator.
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&text=ExpressionRangeVariableSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})
  name: LetClause(SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  nameWithType: SyntaxFactory.LetClause(SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::LetClauseSyntax ^ LetClause(Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^> variables);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax LetClause (Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax> variables);
  - lang: fsharp
    values:
    - value: 'static member LetClause : Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax> -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LetClause (variables As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)) As LetClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents a "Let" query operator.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax&text=LetClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: letKeyword
    description: The "Let" keyword.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: variables
    description: The list of expression range variable being defined by the Let operator.
    type: <xref href="Microsoft.CodeAnalysis.SeparatedSyntaxList`1?alt=Microsoft.CodeAnalysis.SeparatedSyntaxList&text=SeparatedSyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&text=ExpressionRangeVariableSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})
  name: LetClause(SyntaxToken, SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(SyntaxToken, SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  nameWithType: SyntaxFactory.LetClause(SyntaxToken, SeparatedSyntaxList<ExpressionRangeVariableSyntax>)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::LetClauseSyntax ^ LetClause(Microsoft::CodeAnalysis::SyntaxToken letKeyword, Microsoft::CodeAnalysis::SeparatedSyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^> variables);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax LetClause (Microsoft.CodeAnalysis.SyntaxToken letKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax> variables);
  - lang: fsharp
    values:
    - value: 'static member LetClause : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax> -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LetClause (letKeyword As SyntaxToken, variables As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)) As LetClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents a "Let" query operator.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause
namespace: Microsoft.CodeAnalysis.VisualBasic
name: LetClause
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause
nameWithType: SyntaxFactory.LetClause
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::LetClause
  - LetClause
  - SyntaxFactory.LetClause
  - SyntaxFactory::LetClause
  helpviewer_keywords:
  - SyntaxFactory.LetClause method [.NET]
  - LetClause method [.NET], class SyntaxFactory
  - SyntaxFactory.LetClause(ExpressionRangeVariableSyntax[]) method [.NET]
  - LetClause(ExpressionRangeVariableSyntax[]) method [.NET], class SyntaxFactory
  - SyntaxFactory.LetClause(SeparatedSyntaxList<ExpressionRangeVariableSyntax>) method [.NET]
  - LetClause(SeparatedSyntaxList<ExpressionRangeVariableSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.LetClause(SyntaxToken, SeparatedSyntaxList<ExpressionRangeVariableSyntax>) method [.NET]
  - LetClause(SyntaxToken, SeparatedSyntaxList<ExpressionRangeVariableSyntax>) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
