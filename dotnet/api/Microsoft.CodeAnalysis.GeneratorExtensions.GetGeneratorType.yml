### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Type?alt=System.Type&text=Type" data-throw-if-not-resolved="True"/>
    description: The underlying generator type
  parameters:
  - namesWithMoniker:
    - value: generator
    description: The generator to get the type of
    type: <xref href="Microsoft.CodeAnalysis.ISourceGenerator?alt=Microsoft.CodeAnalysis.ISourceGenerator&text=ISourceGenerator" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType(Microsoft.CodeAnalysis.ISourceGenerator)
  commentId: M:Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType(Microsoft.CodeAnalysis.ISourceGenerator)
  name: GetGeneratorType(ISourceGenerator)
  fullName: Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType(ISourceGenerator)
  nameWithType: GeneratorExtensions.GetGeneratorType(ISourceGenerator)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Type GetGeneratorType (this Microsoft.CodeAnalysis.ISourceGenerator generator);
  - lang: fsharp
    values:
    - value: 'static member GetGeneratorType : Microsoft.CodeAnalysis.ISourceGenerator -> Type'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetGeneratorType (generator As ISourceGenerator) As Type
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Returns the underlying type of a given generator
  remarks: <p>For <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.IIncrementalGenerator"></xref>s a wrapper is created that also implements <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.ISourceGenerator"></xref>. This method will unwrap and return the underlying type in those cases.</p>
  metadata: {}
uid: Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType*
commentId: Overload:Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType
namespace: Microsoft.CodeAnalysis
name: GetGeneratorType
fullName: Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType
nameWithType: GeneratorExtensions.GetGeneratorType
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.GeneratorExtensions.GetGeneratorType
  - Microsoft::CodeAnalysis::GeneratorExtensions::GetGeneratorType
  - GetGeneratorType
  - GeneratorExtensions.GetGeneratorType
  - GeneratorExtensions::GetGeneratorType
  helpviewer_keywords:
  - GeneratorExtensions.GetGeneratorType method [.NET]
  - GetGeneratorType method [.NET], class GeneratorExtensions
  - GeneratorExtensions.GetGeneratorType(ISourceGenerator) extension method [.NET]
  - GetGeneratorType(ISourceGenerator) extension method [.NET], class GeneratorExtensions
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
