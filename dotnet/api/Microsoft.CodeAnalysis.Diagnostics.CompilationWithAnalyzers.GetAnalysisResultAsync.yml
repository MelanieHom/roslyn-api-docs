### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: model
    description: Semantic model representing the syntax tree to analyze.
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filterSpan
    description: An optional span within the tree to scope analysis.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Text.TextSpan?alt=Microsoft.CodeAnalysis.Text.TextSpan&text=TextSpan" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: analyzers
    description: Analyzers whose diagnostics are required. All the given analyzers must be from the analyzers passed into the constructor of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers"></xref>.
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer?alt=Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer&text=DiagnosticAnalyzer" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.SemanticModel model, Microsoft.CodeAnalysis.Text.TextSpan? filterSpan, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.SemanticModel * Nullable<Microsoft.CodeAnalysis.Text.TextSpan> * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (model As SemanticModel, filterSpan As Nullable(Of TextSpan), analyzers As ImmutableArray(Of DiagnosticAnalyzer), cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SemanticDiagnostics"></xref> produced by the given <code data-dev-comment-type="paramref">analyzers</code> from analyzing the given <code data-dev-comment-type="paramref">model</code>, optionally scoped to a <code data-dev-comment-type="paramref">filterSpan</code>.

    Depending on analyzers' behavior, some diagnostics that would be reported for the tree by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: tree
    description: Syntax tree to analyze.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTree?alt=Microsoft.CodeAnalysis.SyntaxTree&text=SyntaxTree" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: analyzers
    description: Analyzers whose diagnostics are required. All the given analyzers must be from the analyzers passed into the constructor of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers"></xref>.
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer?alt=Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer&text=DiagnosticAnalyzer" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(SyntaxTree, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.SyntaxTree tree, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.SyntaxTree * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (tree As SyntaxTree, analyzers As ImmutableArray(Of DiagnosticAnalyzer), cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SyntaxDiagnostics"></xref> produced by given <code data-dev-comment-type="paramref">analyzers</code> from analyzing the given <code data-dev-comment-type="paramref">tree</code>.

    Depending on analyzers' behavior, some diagnostics that would be reported for the tree by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: file
    description: Additional file to analyze.
    type: <xref href="Microsoft.CodeAnalysis.AdditionalText?alt=Microsoft.CodeAnalysis.AdditionalText&text=AdditionalText" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: analyzers
    description: Analyzers whose diagnostics are required. All the given analyzers must be from the analyzers passed into the constructor of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers"></xref>.
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer?alt=Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer&text=DiagnosticAnalyzer" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.AdditionalText,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.AdditionalText,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(AdditionalText, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.AdditionalText file, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.AdditionalText * System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (file As AdditionalText, analyzers As ImmutableArray(Of DiagnosticAnalyzer), cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.AdditionalFileDiagnostics"></xref> produced by given <code data-dev-comment-type="paramref">analyzers</code> from analyzing the given additional <code data-dev-comment-type="paramref">file</code>.

    The given <code data-dev-comment-type="paramref">file</code> must be part of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.AdditionalFiles"></xref> for the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.AnalysisOptions"></xref> for this CompilationWithAnalyzers instance.

    Depending on analyzers' behavior, some diagnostics that would be reported for the file by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: model
    description: Semantic model representing the syntax tree to analyze.
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: filterSpan
    description: An optional span within the tree to scope analysis.
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Text.TextSpan?alt=Microsoft.CodeAnalysis.Text.TextSpan&text=TextSpan" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.SemanticModel model, Microsoft.CodeAnalysis.Text.TextSpan? filterSpan, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.SemanticModel * Nullable<Microsoft.CodeAnalysis.Text.TextSpan> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (model As SemanticModel, filterSpan As Nullable(Of TextSpan), cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SemanticDiagnostics"></xref> produced by all <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers"></xref> from analyzing the given <code data-dev-comment-type="paramref">model</code>, optionally scoped to a <code data-dev-comment-type="paramref">filterSpan</code>.

    Depending on analyzers' behavior, some diagnostics that would be reported for the tree by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: tree
    description: Syntax tree to analyze.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTree?alt=Microsoft.CodeAnalysis.SyntaxTree&text=SyntaxTree" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(SyntaxTree, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.SyntaxTree tree, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.SyntaxTree * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (tree As SyntaxTree, cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SyntaxDiagnostics"></xref> produced by all <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers"></xref> from analyzing the given <code data-dev-comment-type="paramref">tree</code>.

    Depending on analyzers' behavior, some diagnostics that would be reported for the tree by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: analyzers
    description: Analyzers whose analysis results are required. All the given analyzers must be from the analyzers passed into the constructor of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers"></xref>.
    type: <xref href="System.Collections.Immutable.ImmutableArray`1?alt=System.Collections.Immutable.ImmutableArray&text=ImmutableArray" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer?alt=Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer&text=DiagnosticAnalyzer" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(ImmutableArray<DiagnosticAnalyzer>, CancellationToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         System::Threading::Tasks::Task<Microsoft::CodeAnalysis::Diagnostics::AnalysisResult ^> ^ GetAnalysisResultAsync(System::Collections::Immutable::ImmutableArray<Microsoft::CodeAnalysis::Diagnostics::DiagnosticAnalyzer ^> analyzers, System::Threading::CancellationToken cancellationToken);
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (analyzers As ImmutableArray(Of DiagnosticAnalyzer), cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Executes the given <code data-dev-comment-type="paramref">analyzers</code> and returns the corresponding <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> with all diagnostics and telemetry info.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: file
    description: Additional file to analyze.
    type: <xref href="Microsoft.CodeAnalysis.AdditionalText?alt=Microsoft.CodeAnalysis.AdditionalText&text=AdditionalText" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.AdditionalText,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(Microsoft.CodeAnalysis.AdditionalText,System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(AdditionalText, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (Microsoft.CodeAnalysis.AdditionalText file, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : Microsoft.CodeAnalysis.AdditionalText * System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (file As AdditionalText, cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> populated with <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.AdditionalFileDiagnostics"></xref> produced by all <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers"></xref> from analyzing the given additional <code data-dev-comment-type="paramref">file</code>.

    The given <code data-dev-comment-type="paramref">file</code> must be part of <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.AdditionalFiles"></xref> for the <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.AnalysisOptions"></xref> for this CompilationWithAnalyzers instance.

    Depending on analyzers' behavior, some diagnostics that would be reported for the file by an analysis of the complete compilation can be absent.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult?alt=Microsoft.CodeAnalysis.Diagnostics.AnalysisResult&text=AnalysisResult" data-throw-if-not-resolved="True"/>&gt;
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Threading.CancellationToken)
  name: GetAnalysisResultAsync(CancellationToken)
  fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(CancellationToken)
  nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync(CancellationToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         System::Threading::Tasks::Task<Microsoft::CodeAnalysis::Diagnostics::AnalysisResult ^> ^ GetAnalysisResultAsync(System::Threading::CancellationToken cancellationToken);
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult> GetAnalysisResultAsync (System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'member this.GetAnalysisResultAsync : System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Diagnostics.AnalysisResult>'
  - lang: vb
    values:
    - value: Public Function GetAnalysisResultAsync (cancellationToken As CancellationToken) As Task(Of AnalysisResult)
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Executes all <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers"></xref> and returns the corresponding <xref data-throw-if-not-resolved="true" uid="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult"></xref> with all diagnostics and telemetry info.
  metadata: {}
uid: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync*
commentId: Overload:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync
namespace: Microsoft.CodeAnalysis.Diagnostics
name: GetAnalysisResultAsync
fullName: Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync
nameWithType: CompilationWithAnalyzers.GetAnalysisResultAsync
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.Common v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.Common v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.Common v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.Common v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.Common v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.Common v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.Common v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.Common v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
- value: Microsoft.CodeAnalysis.Common v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.Common v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.Common v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.Common v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.Common v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.Common v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.Common v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.Common v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
devLangs:
- csharp
- vb
- fsharp
- cpp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync
  api_location:
  - Microsoft.CodeAnalysis.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync
  - Microsoft::CodeAnalysis::Diagnostics::CompilationWithAnalyzers::GetAnalysisResultAsync
  - GetAnalysisResultAsync
  - CompilationWithAnalyzers.GetAnalysisResultAsync
  - CompilationWithAnalyzers::GetAnalysisResultAsync
  helpviewer_keywords:
  - CompilationWithAnalyzers.GetAnalysisResultAsync method [.NET]
  - GetAnalysisResultAsync method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(SyntaxTree, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(AdditionalText, ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(SemanticModel, Nullable<TextSpan>, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(SyntaxTree, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(SyntaxTree, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(ImmutableArray<DiagnosticAnalyzer>, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(AdditionalText, CancellationToken) method [.NET]
  - GetAnalysisResultAsync(AdditionalText, CancellationToken) method [.NET], class CompilationWithAnalyzers
  - CompilationWithAnalyzers.GetAnalysisResultAsync(CancellationToken) method [.NET]
  - GetAnalysisResultAsync(CancellationToken) method [.NET], class CompilationWithAnalyzers
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
