### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax&text=JoinClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: joinKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: type
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: inKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: inExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: onKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: leftExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: equalsKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rightExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: into
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax&text=JoinIntoClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  name: JoinClause(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax)
  nameWithType: SyntaxFactory.JoinClause(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::JoinClauseSyntax ^ JoinClause(Microsoft::CodeAnalysis::SyntaxToken joinKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::TypeSyntax ^ type, Microsoft::CodeAnalysis::SyntaxToken identifier, Microsoft::CodeAnalysis::SyntaxToken inKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ inExpression, Microsoft::CodeAnalysis::SyntaxToken onKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ leftExpression, Microsoft::CodeAnalysis::SyntaxToken equalsKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ rightExpression, Microsoft::CodeAnalysis::CSharp::Syntax::JoinIntoClauseSyntax ^ into);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (Microsoft.CodeAnalysis.SyntaxToken joinKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax type, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.SyntaxToken inKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.SyntaxToken onKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.SyntaxToken equalsKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax into);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (Microsoft.CodeAnalysis.SyntaxToken joinKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax? type, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.SyntaxToken inKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.SyntaxToken onKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.SyntaxToken equalsKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax? into);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member JoinClause : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function JoinClause (joinKeyword As SyntaxToken, type As TypeSyntax, identifier As SyntaxToken, inKeyword As SyntaxToken, inExpression As ExpressionSyntax, onKeyword As SyntaxToken, leftExpression As ExpressionSyntax, equalsKeyword As SyntaxToken, rightExpression As ExpressionSyntax, into As JoinIntoClauseSyntax) As JoinClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new JoinClauseSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax&text=JoinClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: type
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: inExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: leftExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rightExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: into
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax&text=JoinIntoClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  name: JoinClause(TypeSyntax, SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax, JoinIntoClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(TypeSyntax, SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax, JoinIntoClauseSyntax)
  nameWithType: SyntaxFactory.JoinClause(TypeSyntax, SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax, JoinIntoClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::JoinClauseSyntax ^ JoinClause(Microsoft::CodeAnalysis::CSharp::Syntax::TypeSyntax ^ type, Microsoft::CodeAnalysis::SyntaxToken identifier, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ inExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ leftExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ rightExpression, Microsoft::CodeAnalysis::CSharp::Syntax::JoinIntoClauseSyntax ^ into);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax type, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax into);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax? type, Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax? into);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member JoinClause : Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function JoinClause (type As TypeSyntax, identifier As SyntaxToken, inExpression As ExpressionSyntax, leftExpression As ExpressionSyntax, rightExpression As ExpressionSyntax, into As JoinIntoClauseSyntax) As JoinClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new JoinClauseSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax&text=JoinClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: identifier
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: inExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: leftExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rightExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  name: JoinClause(String, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(String, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  nameWithType: SyntaxFactory.JoinClause(String, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::JoinClauseSyntax ^ JoinClause(System::String ^ identifier, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ inExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ leftExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ rightExpression);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (string identifier, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression);
  - lang: fsharp
    values:
    - value: 'static member JoinClause : string * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function JoinClause (identifier As String, inExpression As ExpressionSyntax, leftExpression As ExpressionSyntax, rightExpression As ExpressionSyntax) As JoinClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new JoinClauseSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax&text=JoinClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: identifier
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: inExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: leftExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rightExpression
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  name: JoinClause(SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  nameWithType: SyntaxFactory.JoinClause(SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::JoinClauseSyntax ^ JoinClause(Microsoft::CodeAnalysis::SyntaxToken identifier, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ inExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ leftExpression, Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ rightExpression);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax JoinClause (Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax inExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax leftExpression, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax rightExpression);
  - lang: fsharp
    values:
    - value: 'static member JoinClause : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function JoinClause (identifier As SyntaxToken, inExpression As ExpressionSyntax, leftExpression As ExpressionSyntax, rightExpression As ExpressionSyntax) As JoinClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new JoinClauseSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause
namespace: Microsoft.CodeAnalysis.CSharp
name: JoinClause
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause
nameWithType: SyntaxFactory.JoinClause
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::JoinClause
  - JoinClause
  - SyntaxFactory.JoinClause
  - SyntaxFactory::JoinClause
  helpviewer_keywords:
  - SyntaxFactory.JoinClause method [.NET]
  - JoinClause method [.NET], class SyntaxFactory
  - SyntaxFactory.JoinClause(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax) method [.NET]
  - JoinClause(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.JoinClause(TypeSyntax, SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax, JoinIntoClauseSyntax) method [.NET]
  - JoinClause(TypeSyntax, SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax, JoinIntoClauseSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.JoinClause(String, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax) method [.NET]
  - JoinClause(String, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.JoinClause(SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax) method [.NET]
  - JoinClause(SyntaxToken, ExpressionSyntax, ExpressionSyntax, ExpressionSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
