### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax&text=FileScopedNamespaceDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  name: FileScopedNamespaceDeclaration(NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(NameSyntax)
  nameWithType: SyntaxFactory.FileScopedNamespaceDeclaration(NameSyntax)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax FileScopedNamespaceDeclaration (Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name);
  - lang: fsharp
    values:
    - value: 'static member FileScopedNamespaceDeclaration : Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FileScopedNamespaceDeclaration (name As NameSyntax) As FileScopedNamespaceDeclarationSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FileScopedNamespaceDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax&text=FileScopedNamespaceDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: externs
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax&text=ExternAliasDirectiveSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: usings
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  name: FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, NameSyntax, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, NameSyntax, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  nameWithType: SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, NameSyntax, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax FileScopedNamespaceDeclaration (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax> externs, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax> usings, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members);
  - lang: fsharp
    values:
    - value: 'static member FileScopedNamespaceDeclaration : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FileScopedNamespaceDeclaration (attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, name As NameSyntax, externs As SyntaxList(Of ExternAliasDirectiveSyntax), usings As SyntaxList(Of UsingDirectiveSyntax), members As SyntaxList(Of MemberDeclarationSyntax)) As FileScopedNamespaceDeclarationSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FileScopedNamespaceDeclarationSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax&text=FileScopedNamespaceDeclarationSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: namespaceKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: externs
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax&text=ExternAliasDirectiveSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: usings
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: members
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})
  name: FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, NameSyntax, SyntaxToken, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, NameSyntax, SyntaxToken, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  nameWithType: SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, NameSyntax, SyntaxToken, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax FileScopedNamespaceDeclaration (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken namespaceKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name, Microsoft.CodeAnalysis.SyntaxToken semicolonToken, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax> externs, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax> usings, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> members);
  - lang: fsharp
    values:
    - value: 'static member FileScopedNamespaceDeclaration : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax> * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax> -> Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax'
  - lang: vb
    values:
    - value: Public Shared Function FileScopedNamespaceDeclaration (attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, namespaceKeyword As SyntaxToken, name As NameSyntax, semicolonToken As SyntaxToken, externs As SyntaxList(Of ExternAliasDirectiveSyntax), usings As SyntaxList(Of UsingDirectiveSyntax), members As SyntaxList(Of MemberDeclarationSyntax)) As FileScopedNamespaceDeclarationSyntax
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new FileScopedNamespaceDeclarationSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration
namespace: Microsoft.CodeAnalysis.CSharp
name: FileScopedNamespaceDeclaration
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration
nameWithType: SyntaxFactory.FileScopedNamespaceDeclaration
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FileScopedNamespaceDeclaration
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::FileScopedNamespaceDeclaration
  - FileScopedNamespaceDeclaration
  - SyntaxFactory.FileScopedNamespaceDeclaration
  - SyntaxFactory::FileScopedNamespaceDeclaration
  helpviewer_keywords:
  - SyntaxFactory.FileScopedNamespaceDeclaration method [.NET]
  - FileScopedNamespaceDeclaration method [.NET], class SyntaxFactory
  - SyntaxFactory.FileScopedNamespaceDeclaration(NameSyntax) method [.NET]
  - FileScopedNamespaceDeclaration(NameSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, NameSyntax, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET]
  - FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, NameSyntax, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET], class SyntaxFactory
  - SyntaxFactory.FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, NameSyntax, SyntaxToken, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET]
  - FileScopedNamespaceDeclaration(SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, NameSyntax, SyntaxToken, SyntaxList<ExternAliasDirectiveSyntax>, SyntaxList<UsingDirectiveSyntax>, SyntaxList<MemberDeclarationSyntax>) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
