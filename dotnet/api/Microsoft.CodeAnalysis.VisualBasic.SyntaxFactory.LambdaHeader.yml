### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax&text=LambdaHeaderSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    description: >-
      A <cref c="SyntaxKind"></cref> representing the specific kind of LambdaHeaderSyntax.

      One of SubLambdaHeader, FunctionLambdaHeader.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: subOrFunctionKeyword
    description: The "Sub" or "Function" keyword that introduces this lambda expression.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)
  name: LambdaHeader(SyntaxKind, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxToken)
  nameWithType: SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::LambdaHeaderSyntax ^ LambdaHeader(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind, Microsoft::CodeAnalysis::SyntaxToken subOrFunctionKeyword);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax LambdaHeader (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxToken subOrFunctionKeyword);
  - lang: fsharp
    values:
    - value: 'static member LambdaHeader : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LambdaHeader (kind As SyntaxKind, subOrFunctionKeyword As SyntaxToken) As LambdaHeaderSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents the header part of a lambda expression
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax&text=LambdaHeaderSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: kind
    description: >-
      A <cref c="SyntaxKind"></cref> representing the specific kind of LambdaHeaderSyntax.

      One of SubLambdaHeader, FunctionLambdaHeader.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind?alt=Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&text=SyntaxKind" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    description: >-
      A list of all attribute lists on this declaration. If no attributes were

      specified, Nothing is returned.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: modifiers
    description: >-
      A list of all the modifier tokens that were present on this declaration. If no

      modifiers were specified, an empty list is returned. A bitfield version of all

      the modifiers ORed together, which is in many cases easier to use, can be

      obtained with the Modifiers property.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxTokenList?alt=Microsoft.CodeAnalysis.SyntaxTokenList&text=SyntaxTokenList" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: subOrFunctionKeyword
    description: The "Sub" or "Function" keyword that introduces this lambda expression.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameterList
    description: >-
      The method's parameter list including the parentheses. If no parameter list was

      present, Nothing is returned.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax&text=ParameterListSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: asClause
    description: >-
      The "As" clause that describes the return type. If no As clause was present,

      Nothing is returned.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)
  name: LambdaHeader(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, ParameterListSyntax, SimpleAsClauseSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, ParameterListSyntax, SimpleAsClauseSyntax)
  nameWithType: SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, ParameterListSyntax, SimpleAsClauseSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::LambdaHeaderSyntax ^ LambdaHeader(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::SyntaxTokenList modifiers, Microsoft::CodeAnalysis::SyntaxToken subOrFunctionKeyword, Microsoft::CodeAnalysis::VisualBasic::Syntax::ParameterListSyntax ^ parameterList, Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ asClause);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax LambdaHeader (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.SyntaxTokenList modifiers, Microsoft.CodeAnalysis.SyntaxToken subOrFunctionKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax parameterList, Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax asClause);
  - lang: fsharp
    values:
    - value: 'static member LambdaHeader : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.SyntaxTokenList * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax'
  - lang: vb
    values:
    - value: Public Shared Function LambdaHeader (kind As SyntaxKind, attributeLists As SyntaxList(Of AttributeListSyntax), modifiers As SyntaxTokenList, subOrFunctionKeyword As SyntaxToken, parameterList As ParameterListSyntax, asClause As SimpleAsClauseSyntax) As LambdaHeaderSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Represents the header part of a lambda expression
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader
namespace: Microsoft.CodeAnalysis.VisualBasic
name: LambdaHeader
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader
nameWithType: SyntaxFactory.LambdaHeader
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::LambdaHeader
  - LambdaHeader
  - SyntaxFactory.LambdaHeader
  - SyntaxFactory::LambdaHeader
  helpviewer_keywords:
  - SyntaxFactory.LambdaHeader method [.NET]
  - LambdaHeader method [.NET], class SyntaxFactory
  - SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxToken) method [.NET]
  - LambdaHeader(SyntaxKind, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.LambdaHeader(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, ParameterListSyntax, SimpleAsClauseSyntax) method [.NET]
  - LambdaHeader(SyntaxKind, SyntaxList<AttributeListSyntax>, SyntaxTokenList, SyntaxToken, ParameterListSyntax, SimpleAsClauseSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
