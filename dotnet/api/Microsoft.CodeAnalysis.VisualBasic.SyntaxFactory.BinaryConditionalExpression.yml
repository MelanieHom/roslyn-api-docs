### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax&text=BinaryConditionalExpressionSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: firstExpression
    description: The first expression inside the parentheses.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: secondExpression
    description: The second expression inside the parentheses.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)
  name: BinaryConditionalExpression(ExpressionSyntax, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(ExpressionSyntax, ExpressionSyntax)
  nameWithType: SyntaxFactory.BinaryConditionalExpression(ExpressionSyntax, ExpressionSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::BinaryConditionalExpressionSyntax ^ BinaryConditionalExpression(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ firstExpression, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ secondExpression);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax BinaryConditionalExpression (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax firstExpression, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax secondExpression);
  - lang: fsharp
    values:
    - value: 'static member BinaryConditionalExpression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax'
  - lang: vb
    values:
    - value: Public Shared Function BinaryConditionalExpression (firstExpression As ExpressionSyntax, secondExpression As ExpressionSyntax) As BinaryConditionalExpressionSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents a conditional expression, If(condition, true-expr, false-expr) or

    If(expr, nothing-expr).
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax&text=BinaryConditionalExpressionSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: ifKeyword
    description: The "If" keyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: openParenToken
    description: The "(" token
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: firstExpression
    description: The first expression inside the parentheses.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: commaToken
    description: The "," token.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: secondExpression
    description: The second expression inside the parentheses.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax&text=ExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: closeParenToken
    description: The ")" token
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: BinaryConditionalExpression(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken)
  nameWithType: SyntaxFactory.BinaryConditionalExpression(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::BinaryConditionalExpressionSyntax ^ BinaryConditionalExpression(Microsoft::CodeAnalysis::SyntaxToken ifKeyword, Microsoft::CodeAnalysis::SyntaxToken openParenToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ firstExpression, Microsoft::CodeAnalysis::SyntaxToken commaToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ secondExpression, Microsoft::CodeAnalysis::SyntaxToken closeParenToken);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax BinaryConditionalExpression (Microsoft.CodeAnalysis.SyntaxToken ifKeyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax firstExpression, Microsoft.CodeAnalysis.SyntaxToken commaToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax secondExpression, Microsoft.CodeAnalysis.SyntaxToken closeParenToken);
  - lang: fsharp
    values:
    - value: 'static member BinaryConditionalExpression : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax'
  - lang: vb
    values:
    - value: Public Shared Function BinaryConditionalExpression (ifKeyword As SyntaxToken, openParenToken As SyntaxToken, firstExpression As ExpressionSyntax, commaToken As SyntaxToken, secondExpression As ExpressionSyntax, closeParenToken As SyntaxToken) As BinaryConditionalExpressionSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents a conditional expression, If(condition, true-expr, false-expr) or

    If(expr, nothing-expr).
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression
namespace: Microsoft.CodeAnalysis.VisualBasic
name: BinaryConditionalExpression
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression
nameWithType: SyntaxFactory.BinaryConditionalExpression
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::BinaryConditionalExpression
  - BinaryConditionalExpression
  - SyntaxFactory.BinaryConditionalExpression
  - SyntaxFactory::BinaryConditionalExpression
  helpviewer_keywords:
  - SyntaxFactory.BinaryConditionalExpression method [.NET]
  - BinaryConditionalExpression method [.NET], class SyntaxFactory
  - SyntaxFactory.BinaryConditionalExpression(ExpressionSyntax, ExpressionSyntax) method [.NET]
  - BinaryConditionalExpression(ExpressionSyntax, ExpressionSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.BinaryConditionalExpression(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken) method [.NET]
  - BinaryConditionalExpression(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
