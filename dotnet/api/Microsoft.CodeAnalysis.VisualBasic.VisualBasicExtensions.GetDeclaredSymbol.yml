### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
    description: A symbol, for the specified identifier; otherwise Null if semantic model is Null.
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    description: A source semantic model.
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identifierSyntax
    description: A IdentifierSyntax object.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax&text=ModifiedIdentifierSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: A cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ModifiedIdentifierSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ModifiedIdentifierSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ModifiedIdentifierSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax identifierSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, identifierSyntax As ModifiedIdentifierSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding symbol for a specified identifier.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamespaceSymbol?alt=Microsoft.CodeAnalysis.INamespaceSymbol&text=INamespaceSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax&text=NamespaceBlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, NamespaceBlockSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceBlockSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceBlockSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamespaceSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamespaceSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As NamespaceBlockSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamespaceSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamespaceSymbol for a specified NamespaceBlockSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamespaceSymbol?alt=Microsoft.CodeAnalysis.INamespaceSymbol&text=INamespaceSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax&text=NamespaceStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, NamespaceStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamespaceSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamespaceSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As NamespaceStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamespaceSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamespaceSymbol for a specified NamespaceStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax&text=OperatorStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, OperatorStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, OperatorStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, OperatorStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As OperatorStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding MethodSymbol for a specified OperatorStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IParameterSymbol?alt=Microsoft.CodeAnalysis.IParameterSymbol&text=IParameterSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: parameter
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax&text=ParameterSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IParameterSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax parameter, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IParameterSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, parameter As ParameterSyntax, Optional cancellationToken As CancellationToken = Nothing) As IParameterSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding ParameterSymbol for a specified ParameterSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax&text=PropertyBlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, PropertyBlockSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyBlockSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyBlockSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As PropertyBlockSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding PropertySymbol for a specified PropertyBlockSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax&text=PropertyStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, PropertyStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As PropertyStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding PropertySymbol for a specified PropertyStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IAliasSymbol?alt=Microsoft.CodeAnalysis.IAliasSymbol&text=IAliasSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax&text=SimpleImportsClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, SimpleImportsClauseSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SimpleImportsClauseSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SimpleImportsClauseSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IAliasSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IAliasSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As SimpleImportsClauseSyntax, Optional cancellationToken As CancellationToken = Nothing) As IAliasSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding AliasSymbol for a specified AliasImportsClauseSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax&text=SubNewStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, SubNewStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SubNewStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SubNewStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As SubNewStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding MethodSymbol for a specified SubNewStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
    description: A symbol, for the specified element; otherwise Nothing.
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    description: A source semantic model.
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: elementSyntax
    description: A TupleElementSyntax object.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax&text=TupleElementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: A cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax elementSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, elementSyntax As TupleElementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding symbol for a specified tuple element.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax&text=TypeBlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TypeBlockSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeBlockSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeBlockSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As TypeBlockSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamedTypeSymbol for a specified TypeBlockSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ITypeParameterSymbol?alt=Microsoft.CodeAnalysis.ITypeParameterSymbol&text=ITypeParameterSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameter
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax&text=TypeParameterSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ITypeParameterSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax typeParameter, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ITypeParameterSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, typeParameter As TypeParameterSyntax, Optional cancellationToken As CancellationToken = Nothing) As ITypeParameterSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding TypeParameterSymbol Symbol for a specified TypeParameterSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax&text=TypeStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TypeStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As TypeStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamedTypeSymbol for a specified TypeStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax&text=MethodStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, MethodStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As MethodStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding MethodSymbol for a specified MethodStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax&text=MethodBlockBaseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, MethodBlockBaseSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodBlockBaseSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodBlockBaseSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As MethodBlockBaseSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding MethodSymbol for a specified MethodBlockBaseSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax&text=EnumStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EnumStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EnumStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamedTypeSymbol for a specified EnumStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
    description: A PropertySymbol. Null if semantic model is null.
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    description: A source semantic model.
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: fieldInitializerSyntax
    description: A FieldInitializerSyntax object.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax&text=FieldInitializerSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: A cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, FieldInitializerSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, FieldInitializerSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, FieldInitializerSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax fieldInitializerSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, fieldInitializerSyntax As FieldInitializerSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding PropertySymbol for a specified FieldInitializerSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax&text=AccessorStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AccessorStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AccessorStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AccessorStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As AccessorStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding MethodSymbol for a specified AccessorStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rangeVariableSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&text=AggregationRangeVariableSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AggregationRangeVariableSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AggregationRangeVariableSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AggregationRangeVariableSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax rangeVariableSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, rangeVariableSyntax As AggregationRangeVariableSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding RangeVariableSymbol for a specified AggregationRangeVariableSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILabelSymbol?alt=Microsoft.CodeAnalysis.ILabelSymbol&text=ILabelSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax&text=LabelStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, LabelStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, LabelStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, LabelStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILabelSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILabelSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As LabelStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILabelSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding LabelSymbol for a specified LabelStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILocalSymbol?alt=Microsoft.CodeAnalysis.ILocalSymbol&text=ILocalSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax&text=CatchStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, CatchStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CatchStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CatchStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILocalSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILocalSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As CatchStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILocalSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding LocalSymbol for a specified CatchStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rangeVariableSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&text=CollectionRangeVariableSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, CollectionRangeVariableSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CollectionRangeVariableSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CollectionRangeVariableSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax rangeVariableSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, rangeVariableSyntax As CollectionRangeVariableSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding RangeVariableSymbol for a specified CollectionRangeVariableSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax&text=DeclareStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, DeclareStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DeclareStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DeclareStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As DeclareStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding symbol for a specified  DeclareStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: anonymousObjectCreationExpressionSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax&text=AnonymousObjectCreationExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax anonymousObjectCreationExpressionSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, anonymousObjectCreationExpressionSyntax As AnonymousObjectCreationExpressionSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding  NamedTypeSymbol for a specified  AnonymousObjectCreationExpressionSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax&text=EnumBlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EnumBlockSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumBlockSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumBlockSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EnumBlockSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamedTypeSymbol for a specified EnumBlockSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IFieldSymbol?alt=Microsoft.CodeAnalysis.IFieldSymbol&text=IFieldSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax&text=EnumMemberDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IFieldSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IFieldSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EnumMemberDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IFieldSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding FieldSymbol for a specified EnumMemberDeclarationSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IEventSymbol?alt=Microsoft.CodeAnalysis.IEventSymbol&text=IEventSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax&text=EventBlockSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EventBlockSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventBlockSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventBlockSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IEventSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IEventSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EventBlockSyntax, Optional cancellationToken As CancellationToken = Nothing) As IEventSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding EventSymbol for a specified EventBlockSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IEventSymbol?alt=Microsoft.CodeAnalysis.IEventSymbol&text=IEventSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax&text=EventStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EventStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IEventSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IEventSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EventStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As IEventSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding EventSymbol for a specified EventStatementSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: rangeVariableSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&text=ExpressionRangeVariableSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ExpressionRangeVariableSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ExpressionRangeVariableSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ExpressionRangeVariableSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax rangeVariableSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, rangeVariableSyntax As ExpressionRangeVariableSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding RangeVariableSymbol for a specified ExpressionRangeVariableSyntax.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax&text=DelegateStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, DelegateStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DelegateStatementSyntax, CancellationToken)
  nameWithType: VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DelegateStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As DelegateStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Gets the corresponding NamedTypeSymbol for a specified DelegateStatementSyntax.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol
namespace: Microsoft.CodeAnalysis.VisualBasic
name: GetDeclaredSymbol
fullName: Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol
nameWithType: VisualBasicExtensions.GetDeclaredSymbol
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol
  - Microsoft::CodeAnalysis::VisualBasic::VisualBasicExtensions::GetDeclaredSymbol
  - GetDeclaredSymbol
  - VisualBasicExtensions.GetDeclaredSymbol
  - VisualBasicExtensions::GetDeclaredSymbol
  helpviewer_keywords:
  - VisualBasicExtensions.GetDeclaredSymbol method [.NET]
  - GetDeclaredSymbol method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ModifiedIdentifierSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ModifiedIdentifierSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceBlockSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, NamespaceBlockSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, NamespaceStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, NamespaceStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, OperatorStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, OperatorStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyBlockSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, PropertyBlockSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, PropertyStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, PropertyStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SimpleImportsClauseSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, SimpleImportsClauseSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, SubNewStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, SubNewStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeBlockSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TypeBlockSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, TypeStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TypeStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, MethodStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, MethodBlockBaseSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, MethodBlockBaseSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EnumStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, FieldInitializerSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, FieldInitializerSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AccessorStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AccessorStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AggregationRangeVariableSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AggregationRangeVariableSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, LabelStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, LabelStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CatchStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, CatchStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, CollectionRangeVariableSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, CollectionRangeVariableSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DeclareStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, DeclareStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumBlockSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EnumBlockSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventBlockSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EventBlockSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, EventStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EventStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, ExpressionRangeVariableSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ExpressionRangeVariableSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  - VisualBasicExtensions.GetDeclaredSymbol(SemanticModel, DelegateStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, DelegateStatementSyntax, CancellationToken) extension method [.NET], class VisualBasicExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
