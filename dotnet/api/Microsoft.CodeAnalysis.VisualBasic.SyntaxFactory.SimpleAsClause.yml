### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: type
    description: The type-name part of the As clause.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  name: SimpleAsClause(TypeSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(TypeSyntax)
  nameWithType: SyntaxFactory.SimpleAsClause(TypeSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ SimpleAsClause(Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax SimpleAsClause (Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type);
  - lang: fsharp
    values:
    - value: 'static member SimpleAsClause : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function SimpleAsClause (type As TypeSyntax) As SimpleAsClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an "As {type-name}" clause that does not have an initializer or

    "New". The type has optional attributes associated with it, although attributes

    are not permitted in all possible places where this node occurs.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: attributeLists
    description: >-
      A list of all attribute lists on the type. If no attributes were specified, an

      empty list is returned.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: type
    description: The type-name part of the As clause.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  name: SimpleAsClause(SyntaxList<AttributeListSyntax>, TypeSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(SyntaxList<AttributeListSyntax>, TypeSyntax)
  nameWithType: SyntaxFactory.SimpleAsClause(SyntaxList<AttributeListSyntax>, TypeSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ SimpleAsClause(Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax SimpleAsClause (Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type);
  - lang: fsharp
    values:
    - value: 'static member SimpleAsClause : Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function SimpleAsClause (attributeLists As SyntaxList(Of AttributeListSyntax), type As TypeSyntax) As SimpleAsClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an "As {type-name}" clause that does not have an initializer or

    "New". The type has optional attributes associated with it, although attributes

    are not permitted in all possible places where this node occurs.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax&text=SimpleAsClauseSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: asKeyword
    description: The "As" keyword.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: attributeLists
    description: >-
      A list of all attribute lists on the type. If no attributes were specified, an

      empty list is returned.
    type: <xref href="Microsoft.CodeAnalysis.SyntaxList`1?alt=Microsoft.CodeAnalysis.SyntaxList&text=SyntaxList" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&text=AttributeListSyntax" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: type
    description: The type-name part of the As clause.
    type: <xref href="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax?alt=Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax&text=TypeSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  commentId: M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)
  name: SimpleAsClause(SyntaxToken, SyntaxList<AttributeListSyntax>, TypeSyntax)
  fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(SyntaxToken, SyntaxList<AttributeListSyntax>, TypeSyntax)
  nameWithType: SyntaxFactory.SimpleAsClause(SyntaxToken, SyntaxList<AttributeListSyntax>, TypeSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::VisualBasic::Syntax::SimpleAsClauseSyntax ^ SimpleAsClause(Microsoft::CodeAnalysis::SyntaxToken asKeyword, Microsoft::CodeAnalysis::SyntaxList<Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^> attributeLists, Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax SimpleAsClause (Microsoft.CodeAnalysis.SyntaxToken asKeyword, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> attributeLists, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type);
  - lang: fsharp
    values:
    - value: 'static member SimpleAsClause : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax> * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax'
  - lang: vb
    values:
    - value: Public Shared Function SimpleAsClause (asKeyword As SyntaxToken, attributeLists As SyntaxList(Of AttributeListSyntax), type As TypeSyntax) As SimpleAsClauseSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Represents an "As {type-name}" clause that does not have an initializer or

    "New". The type has optional attributes associated with it, although attributes

    are not permitted in all possible places where this node occurs.
  metadata: {}
uid: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause*
commentId: Overload:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause
namespace: Microsoft.CodeAnalysis.VisualBasic
name: SimpleAsClause
fullName: Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause
nameWithType: SyntaxFactory.SimpleAsClause
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.VisualBasic v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.VisualBasic v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.VisualBasic v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.VisualBasic v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.VisualBasic v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.VisualBasic v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause
  api_location:
  - Microsoft.CodeAnalysis.VisualBasic.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause
  - Microsoft::CodeAnalysis::VisualBasic::SyntaxFactory::SimpleAsClause
  - SimpleAsClause
  - SyntaxFactory.SimpleAsClause
  - SyntaxFactory::SimpleAsClause
  helpviewer_keywords:
  - SyntaxFactory.SimpleAsClause method [.NET]
  - SimpleAsClause method [.NET], class SyntaxFactory
  - SyntaxFactory.SimpleAsClause(TypeSyntax) method [.NET]
  - SimpleAsClause(TypeSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.SimpleAsClause(SyntaxList<AttributeListSyntax>, TypeSyntax) method [.NET]
  - SimpleAsClause(SyntaxList<AttributeListSyntax>, TypeSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.SimpleAsClause(SyntaxToken, SyntaxList<AttributeListSyntax>, TypeSyntax) method [.NET]
  - SimpleAsClause(SyntaxToken, SyntaxList<AttributeListSyntax>, TypeSyntax) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
