### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: usingKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: staticKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: alias
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax&text=NameEqualsSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: UsingDirective(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  nameWithType: SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingDirectiveSyntax ^ UsingDirective(Microsoft::CodeAnalysis::SyntaxToken usingKeyword, Microsoft::CodeAnalysis::SyntaxToken staticKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::NameEqualsSyntax ^ alias, Microsoft::CodeAnalysis::CSharp::Syntax::NameSyntax ^ name, Microsoft::CodeAnalysis::SyntaxToken semicolonToken);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken staticKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken staticKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax? alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member UsingDirective : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingDirective (usingKeyword As SyntaxToken, staticKeyword As SyntaxToken, alias As NameEqualsSyntax, name As NameSyntax, semicolonToken As SyntaxToken) As UsingDirectiveSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingDirectiveSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  name: UsingDirective(NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(NameSyntax)
  nameWithType: SyntaxFactory.UsingDirective(NameSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingDirectiveSyntax ^ UsingDirective(Microsoft::CodeAnalysis::CSharp::Syntax::NameSyntax ^ name);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name);
  - lang: fsharp
    values:
    - value: 'static member UsingDirective : Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingDirective (name As NameSyntax) As UsingDirectiveSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingDirectiveSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: alias
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax&text=NameEqualsSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  name: UsingDirective(NameEqualsSyntax, NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(NameEqualsSyntax, NameSyntax)
  nameWithType: SyntaxFactory.UsingDirective(NameEqualsSyntax, NameSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingDirectiveSyntax ^ UsingDirective(Microsoft::CodeAnalysis::CSharp::Syntax::NameEqualsSyntax ^ alias, Microsoft::CodeAnalysis::CSharp::Syntax::NameSyntax ^ name);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name);
  - lang: fsharp
    values:
    - value: 'static member UsingDirective : Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingDirective (alias As NameEqualsSyntax, name As NameSyntax) As UsingDirectiveSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingDirectiveSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: staticKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: alias
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax&text=NameEqualsSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  name: UsingDirective(SyntaxToken, NameEqualsSyntax, NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(SyntaxToken, NameEqualsSyntax, NameSyntax)
  nameWithType: SyntaxFactory.UsingDirective(SyntaxToken, NameEqualsSyntax, NameSyntax)
  syntaxWithMoniker:
  - lang: cpp
    values:
    - value: >-
        public:
         static Microsoft::CodeAnalysis::CSharp::Syntax::UsingDirectiveSyntax ^ UsingDirective(Microsoft::CodeAnalysis::SyntaxToken staticKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::NameEqualsSyntax ^ alias, Microsoft::CodeAnalysis::CSharp::Syntax::NameSyntax ^ name);
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.SyntaxToken staticKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.SyntaxToken staticKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax? alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.4.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member UsingDirective : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingDirective (staticKeyword As SyntaxToken, alias As NameEqualsSyntax, name As NameSyntax) As UsingDirectiveSyntax
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingDirectiveSyntax instance.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: globalKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: usingKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: staticKeyword
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: alias
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax&text=NameEqualsSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: name
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax&text=NameSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: semicolonToken
    type: <xref href="Microsoft.CodeAnalysis.SyntaxToken?alt=Microsoft.CodeAnalysis.SyntaxToken&text=SyntaxToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  name: UsingDirective(SyntaxToken, SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  nameWithType: SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax UsingDirective (Microsoft.CodeAnalysis.SyntaxToken globalKeyword, Microsoft.CodeAnalysis.SyntaxToken usingKeyword, Microsoft.CodeAnalysis.SyntaxToken staticKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax? alias, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax name, Microsoft.CodeAnalysis.SyntaxToken semicolonToken);
  - lang: fsharp
    values:
    - value: 'static member UsingDirective : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax * Microsoft.CodeAnalysis.SyntaxToken -> Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax'
  - lang: vb
    values:
    - value: Public Shared Function UsingDirective (globalKeyword As SyntaxToken, usingKeyword As SyntaxToken, staticKeyword As SyntaxToken, alias As NameEqualsSyntax, name As NameSyntax, semicolonToken As SyntaxToken) As UsingDirectiveSyntax
  monikers:
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Creates a new UsingDirectiveSyntax instance.
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective
namespace: Microsoft.CodeAnalysis.CSharp
name: UsingDirective
fullName: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective
nameWithType: SyntaxFactory.UsingDirective
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- cpp
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective
  - Microsoft::CodeAnalysis::CSharp::SyntaxFactory::UsingDirective
  - UsingDirective
  - SyntaxFactory.UsingDirective
  - SyntaxFactory::UsingDirective
  helpviewer_keywords:
  - SyntaxFactory.UsingDirective method [.NET]
  - UsingDirective method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken) method [.NET]
  - UsingDirective(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingDirective(NameSyntax) method [.NET]
  - UsingDirective(NameSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingDirective(NameEqualsSyntax, NameSyntax) method [.NET]
  - UsingDirective(NameEqualsSyntax, NameSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingDirective(SyntaxToken, NameEqualsSyntax, NameSyntax) method [.NET]
  - UsingDirective(SyntaxToken, NameEqualsSyntax, NameSyntax) method [.NET], class SyntaxFactory
  - SyntaxFactory.UsingDirective(SyntaxToken, SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken) method [.NET]
  - UsingDirective(SyntaxToken, SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken) method [.NET], class SyntaxFactory
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
