### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax&text=VariableDeclaratorSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, VariableDeclaratorSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, VariableDeclaratorSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, VariableDeclaratorSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As VariableDeclaratorSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a variable declarator syntax, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IAliasSymbol?alt=Microsoft.CodeAnalysis.IAliasSymbol&text=IAliasSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax&text=UsingDirectiveSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, UsingDirectiveSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, UsingDirectiveSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, UsingDirectiveSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IAliasSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IAliasSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IAliasSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As UsingDirectiveSyntax, Optional cancellationToken As CancellationToken = Nothing) As IAliasSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a using declaration get the corresponding symbol for the using alias that was introduced.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ITypeParameterSymbol?alt=Microsoft.CodeAnalysis.ITypeParameterSymbol&text=ITypeParameterSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: typeParameter
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax&text=TypeParameterSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ITypeParameterSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax typeParameter, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ITypeParameterSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax typeParameter, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ITypeParameterSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, typeParameter As TypeParameterSyntax, Optional cancellationToken As CancellationToken = Nothing) As ITypeParameterSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a type parameter declaration (field or method), get the corresponding symbol
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaratorSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax&text=TupleExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TupleExpressionSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleExpressionSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleExpressionSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declaratorSyntax As TupleExpressionSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node of tuple expression, get the tuple type symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax&text=TupleElementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As TupleElementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a tuple element syntax, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILabelSymbol?alt=Microsoft.CodeAnalysis.ILabelSymbol&text=ILabelSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax&text=SwitchLabelSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, SwitchLabelSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, SwitchLabelSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, SwitchLabelSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILabelSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ILabelSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILabelSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As SwitchLabelSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILabelSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a switch label syntax, get the corresponding label symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: designationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax&text=SingleVariableDesignationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, SingleVariableDesignationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, SingleVariableDesignationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, SingleVariableDesignationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax designationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax designationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, designationSyntax As SingleVariableDesignationSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a variable declarator syntax, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: node
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax&text=QueryContinuationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, QueryContinuationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryContinuationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryContinuationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax node, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax node, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, node As QueryContinuationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Get the query range variable declared in a query continuation clause.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: queryClause
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax&text=QueryClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, QueryClauseSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryClauseSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryClauseSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax queryClause, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax queryClause, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, queryClause As QueryClauseSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax&text=PropertyDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, PropertyDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, PropertyDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, PropertyDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As PropertyDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node that declares a property, get the corresponding declared symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IParameterSymbol?alt=Microsoft.CodeAnalysis.IParameterSymbol&text=IParameterSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax&text=ParameterSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IParameterSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IParameterSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IParameterSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As ParameterSyntax, Optional cancellationToken As CancellationToken = Nothing) As IParameterSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a parameter declaration syntax node, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamespaceSymbol?alt=Microsoft.CodeAnalysis.INamespaceSymbol&text=INamespaceSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax&text=NamespaceDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, NamespaceDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, NamespaceDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, NamespaceDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamespaceSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.INamespaceSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamespaceSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As NamespaceDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamespaceSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Given a namespace declaration syntax node, get the corresponding namespace symbol for

    the declaration assembly.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&text=MemberDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, MemberDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, MemberDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, MemberDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As MemberDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a member declaration syntax, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILabelSymbol?alt=Microsoft.CodeAnalysis.ILabelSymbol&text=ILabelSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax&text=LabeledStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, LabeledStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, LabeledStatementSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, LabeledStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILabelSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ILabelSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILabelSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As LabeledStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILabelSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a labeled statement syntax, get the corresponding label symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IRangeVariableSymbol?alt=Microsoft.CodeAnalysis.IRangeVariableSymbol&text=IRangeVariableSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: node
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax&text=JoinIntoClauseSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, JoinIntoClauseSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, JoinIntoClauseSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, JoinIntoClauseSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax node, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IRangeVariableSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax node, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IRangeVariableSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, node As JoinIntoClauseSyntax, Optional cancellationToken As CancellationToken = Nothing) As IRangeVariableSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Get the query range variable declared in a join into clause.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax&text=CompilationUnitSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, CompilationUnitSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, CompilationUnitSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, CompilationUnitSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As CompilationUnitSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a compilation unit syntax, get the corresponding Simple Program entry point symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILocalSymbol?alt=Microsoft.CodeAnalysis.ILocalSymbol&text=ILocalSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: forEachStatement
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax&text=ForEachStatementSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ForEachStatementSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, ForEachStatementSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, ForEachStatementSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILocalSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax forEachStatement, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ILocalSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax forEachStatement, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILocalSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, forEachStatement As ForEachStatementSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILocalSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a foreach statement, get the symbol for the iteration variable
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax&text=AccessorDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AccessorDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, AccessorDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, AccessorDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As AccessorDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node that declares a property or member accessor, get the corresponding symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaratorSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax&text=AnonymousObjectCreationExpressionSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declaratorSyntax As AnonymousObjectCreationExpressionSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node of anonymous object creation expression, get the anonymous object type symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaratorSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax&text=AnonymousObjectMemberDeclaratorSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, AnonymousObjectMemberDeclaratorSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectMemberDeclaratorSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectMemberDeclaratorSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declaratorSyntax As AnonymousObjectMemberDeclaratorSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node of anonymous object creation initializer, get the anonymous object property symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declaratorSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax&text=ArgumentSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ArgumentSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, ArgumentSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, ArgumentSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax declaratorSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declaratorSyntax As ArgumentSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node of a tuple argument, get the tuple element symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IMethodSymbol?alt=Microsoft.CodeAnalysis.IMethodSymbol&text=IMethodSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax&text=BaseMethodDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, BaseMethodDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseMethodDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseMethodDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IMethodSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IMethodSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As BaseMethodDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IMethodSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a base method declaration syntax, get the corresponding method symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IPropertySymbol?alt=Microsoft.CodeAnalysis.IPropertySymbol&text=IPropertySymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax&text=IndexerDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, IndexerDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, IndexerDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, IndexerDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IPropertySymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IPropertySymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As IndexerDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IPropertySymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node that declares an indexer, get the corresponding declared symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax&text=BaseTypeDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, BaseTypeDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseTypeDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseTypeDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As BaseTypeDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a type declaration, get the corresponding type symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ISymbol?alt=Microsoft.CodeAnalysis.ISymbol&text=ISymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax&text=BasePropertyDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, BasePropertyDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, BasePropertyDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, BasePropertyDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ISymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ISymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ISymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As BasePropertyDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As ISymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node that declares a property, indexer or an event, get the corresponding declared symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamedTypeSymbol?alt=Microsoft.CodeAnalysis.INamedTypeSymbol&text=INamedTypeSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax&text=DelegateDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, DelegateDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, DelegateDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, DelegateDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.INamedTypeSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamedTypeSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As DelegateDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamedTypeSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a delegate declaration, get the corresponding type symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IFieldSymbol?alt=Microsoft.CodeAnalysis.IFieldSymbol&text=IFieldSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax&text=EnumMemberDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IFieldSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IFieldSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IFieldSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EnumMemberDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IFieldSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a enum member declaration, get the corresponding field symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IEventSymbol?alt=Microsoft.CodeAnalysis.IEventSymbol&text=IEventSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax&text=EventDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, EventDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, EventDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, EventDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IEventSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IEventSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IEventSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As EventDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As IEventSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a syntax node that declares a (custom) event, get the corresponding event symbol.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.IAliasSymbol?alt=Microsoft.CodeAnalysis.IAliasSymbol&text=IAliasSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax&text=ExternAliasDirectiveSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, ExternAliasDirectiveSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, ExternAliasDirectiveSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, ExternAliasDirectiveSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.IAliasSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.IAliasSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.IAliasSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As ExternAliasDirectiveSyntax, Optional cancellationToken As CancellationToken = Nothing) As IAliasSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given an extern alias declaration get the corresponding symbol for the alias that was introduced.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.INamespaceSymbol?alt=Microsoft.CodeAnalysis.INamespaceSymbol&text=INamespaceSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: declarationSyntax
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax&text=FileScopedNamespaceDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, FileScopedNamespaceDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, FileScopedNamespaceDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, FileScopedNamespaceDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.INamespaceSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax declarationSyntax, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.FileScopedNamespaceDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.INamespaceSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, declarationSyntax As FileScopedNamespaceDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As INamespaceSymbol
  monikers:
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: >-
    Given a namespace declaration syntax node, get the corresponding namespace symbol for

    the declaration assembly.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.CodeAnalysis.ILocalSymbol?alt=Microsoft.CodeAnalysis.ILocalSymbol&text=ILocalSymbol" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: semanticModel
    type: <xref href="Microsoft.CodeAnalysis.SemanticModel?alt=Microsoft.CodeAnalysis.SemanticModel&text=SemanticModel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: catchDeclaration
    type: <xref href="Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax?alt=Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax&text=CatchDeclarationSyntax" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,System.Threading.CancellationToken)
  commentId: M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,System.Threading.CancellationToken)
  name: GetDeclaredSymbol(SemanticModel, CatchDeclarationSyntax, CancellationToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(SemanticModel, CatchDeclarationSyntax, CancellationToken)
  nameWithType: CSharpExtensions.GetDeclaredSymbol(SemanticModel, CatchDeclarationSyntax, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.CodeAnalysis.ILocalSymbol GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax catchDeclaration, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.0
      - roslyn-dotnet-3.1
      - roslyn-dotnet-3.2
      - roslyn-dotnet-3.2.1
      - roslyn-dotnet-3.3.1
      - roslyn-dotnet-3.4.0
    - value: public static Microsoft.CodeAnalysis.ILocalSymbol? GetDeclaredSymbol (this Microsoft.CodeAnalysis.SemanticModel? semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax catchDeclaration, System.Threading.CancellationToken cancellationToken = default);
      monikers:
      - roslyn-dotnet-3.10.0
      - roslyn-dotnet-3.11.0
      - roslyn-dotnet-3.5.0
      - roslyn-dotnet-3.6.0
      - roslyn-dotnet-3.7.0
      - roslyn-dotnet-3.8.0
      - roslyn-dotnet-3.9.0
      - roslyn-dotnet-4.0.1
      - roslyn-dotnet-4.1.0
      - roslyn-dotnet-4.2.0
  - lang: fsharp
    values:
    - value: 'static member GetDeclaredSymbol : Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax * System.Threading.CancellationToken -> Microsoft.CodeAnalysis.ILocalSymbol'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetDeclaredSymbol (semanticModel As SemanticModel, catchDeclaration As CatchDeclarationSyntax, Optional cancellationToken As CancellationToken = Nothing) As ILocalSymbol
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
  summary: Given a catch declaration, get the symbol for the exception variable
  metadata: {}
uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol*
commentId: Overload:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol
namespace: Microsoft.CodeAnalysis.CSharp
name: GetDeclaredSymbol
fullName: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol
nameWithType: CSharpExtensions.GetDeclaredSymbol
assembliesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp.dll
packagesWithMoniker:
- value: Microsoft.CodeAnalysis.CSharp v3.0.0
  monikers:
  - roslyn-dotnet-3.0
- value: Microsoft.CodeAnalysis.CSharp v3.1.0
  monikers:
  - roslyn-dotnet-3.1
- value: Microsoft.CodeAnalysis.CSharp v3.10.0
  monikers:
  - roslyn-dotnet-3.10.0
- value: Microsoft.CodeAnalysis.CSharp v3.11.0
  monikers:
  - roslyn-dotnet-3.11.0
- value: Microsoft.CodeAnalysis.CSharp v3.2.0
  monikers:
  - roslyn-dotnet-3.2
- value: Microsoft.CodeAnalysis.CSharp v3.2.1
  monikers:
  - roslyn-dotnet-3.2.1
- value: Microsoft.CodeAnalysis.CSharp v3.3.1
  monikers:
  - roslyn-dotnet-3.3.1
- value: Microsoft.CodeAnalysis.CSharp v3.4.0
  monikers:
  - roslyn-dotnet-3.4.0
- value: Microsoft.CodeAnalysis.CSharp v3.5.0
  monikers:
  - roslyn-dotnet-3.5.0
- value: Microsoft.CodeAnalysis.CSharp v3.6.0
  monikers:
  - roslyn-dotnet-3.6.0
- value: Microsoft.CodeAnalysis.CSharp v3.7.0
  monikers:
  - roslyn-dotnet-3.7.0
- value: Microsoft.CodeAnalysis.CSharp v3.8.0
  monikers:
  - roslyn-dotnet-3.8.0
- value: Microsoft.CodeAnalysis.CSharp v3.9.0
  monikers:
  - roslyn-dotnet-3.9.0
- value: Microsoft.CodeAnalysis.CSharp v4.0.1
  monikers:
  - roslyn-dotnet-4.0.1
- value: Microsoft.CodeAnalysis.CSharp v4.1.0
  monikers:
  - roslyn-dotnet-4.1.0
- value: Microsoft.CodeAnalysis.CSharp v4.2.0
  monikers:
  - roslyn-dotnet-4.2.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- roslyn-dotnet
- roslyn-dotnet-3.0
- roslyn-dotnet-3.1
- roslyn-dotnet-3.10.0
- roslyn-dotnet-3.11.0
- roslyn-dotnet-3.2
- roslyn-dotnet-3.2.1
- roslyn-dotnet-3.3.1
- roslyn-dotnet-3.4.0
- roslyn-dotnet-3.5.0
- roslyn-dotnet-3.6.0
- roslyn-dotnet-3.7.0
- roslyn-dotnet-3.8.0
- roslyn-dotnet-3.9.0
- roslyn-dotnet-4.0.1
- roslyn-dotnet-4.1.0
- roslyn-dotnet-4.2.0
metadata:
  api_name:
  - Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol
  api_location:
  - Microsoft.CodeAnalysis.CSharp.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol
  - Microsoft::CodeAnalysis::CSharp::CSharpExtensions::GetDeclaredSymbol
  - GetDeclaredSymbol
  - CSharpExtensions.GetDeclaredSymbol
  - CSharpExtensions::GetDeclaredSymbol
  helpviewer_keywords:
  - CSharpExtensions.GetDeclaredSymbol method [.NET]
  - GetDeclaredSymbol method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, VariableDeclaratorSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, VariableDeclaratorSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, UsingDirectiveSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, UsingDirectiveSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TypeParameterSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleExpressionSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TupleExpressionSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, TupleElementSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, SwitchLabelSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, SwitchLabelSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, SingleVariableDesignationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, SingleVariableDesignationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryContinuationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, QueryContinuationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, QueryClauseSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, QueryClauseSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, PropertyDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, PropertyDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ParameterSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, NamespaceDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, NamespaceDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, MemberDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, MemberDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, LabeledStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, LabeledStatementSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, JoinIntoClauseSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, JoinIntoClauseSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, CompilationUnitSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, CompilationUnitSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, ForEachStatementSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ForEachStatementSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, AccessorDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AccessorDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AnonymousObjectCreationExpressionSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, AnonymousObjectMemberDeclaratorSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, AnonymousObjectMemberDeclaratorSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, ArgumentSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ArgumentSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseMethodDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, BaseMethodDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, IndexerDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, IndexerDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, BaseTypeDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, BaseTypeDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, BasePropertyDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, BasePropertyDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, DelegateDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, DelegateDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EnumMemberDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, EventDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, EventDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, ExternAliasDirectiveSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, ExternAliasDirectiveSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, FileScopedNamespaceDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, FileScopedNamespaceDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  - CSharpExtensions.GetDeclaredSymbol(SemanticModel, CatchDeclarationSyntax, CancellationToken) extension method [.NET]
  - GetDeclaredSymbol(SemanticModel, CatchDeclarationSyntax, CancellationToken) extension method [.NET], class CSharpExtensions
  monikers:
  - roslyn-dotnet
  - roslyn-dotnet-3.0
  - roslyn-dotnet-3.1
  - roslyn-dotnet-3.10.0
  - roslyn-dotnet-3.11.0
  - roslyn-dotnet-3.2
  - roslyn-dotnet-3.2.1
  - roslyn-dotnet-3.3.1
  - roslyn-dotnet-3.4.0
  - roslyn-dotnet-3.5.0
  - roslyn-dotnet-3.6.0
  - roslyn-dotnet-3.7.0
  - roslyn-dotnet-3.8.0
  - roslyn-dotnet-3.9.0
  - roslyn-dotnet-4.0.1
  - roslyn-dotnet-4.1.0
  - roslyn-dotnet-4.2.0
